var searchIndex = new Map(JSON.parse('[\
["kernel",{"doc":"32bits - i386 Rust Kernel from Scratch ðŸ¦€","t":"SJSJSSFOOCNNCNNCCCQQHCQQQNOONCCCNCCHCQQCHCNCCCQQQHQCCCCNNNNNCCCCSSSFSFHONNNNOQONNJOHHNNOJNJJQQOJNNNNONNEEJEJSSFENNNHNNCONNNCNNNNONNNNHJFSSSNNHNNNOHCNNHNHCONHNNHNNHCHHCNNNNCJJJJHHHHHHHHHHHHHHHHHHHHHHPPPPPGPGPNNNNNNNNNNNNNNNNNNNNNNSSFNNOONNQHHONOOONNNNOOFSSSSSSSSHNNNNNNNNKHCMMMFNNOONNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGJNNNNNNNNHNNNNJHHHHCCHHHHFNNNCCNNHHNONNCHNHNNNNCNNNNNNHNNNNHNNHOOHNNNNNNNNNFNNNNNNNNONNNNNNFFSSSSSSSSSSSSSSSSSSSSSSSOOOONNNOOONNNNNONNNOOOONNNONNNNOOOONONNOONNNOOOOOOOOOOOOOOOOOOONNONNNNNNNOONOFOONNONNNONNNNOOOPPFPGPSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFPPPPNNNONNNNNNNNNNOOOONNOOOOONNNNNNNNONNNNNNNNOONNNNNNNOOOONOOONOOONNNONNNNNNONNNOFKNNNNONOCMCNNNMFNNONNNNNONNNOPPPPPPFGGGNNNNNNNNONNNNNNHNNOONNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNSSJFSSISSSFESSOOONNNNNNJNHENNOOONNNNHONNNNCNNNJFNNNNOONOOOOOOOOOOOOOOONOOHNOONOOOOOOOOOOOOOOOONONNNSSFJFSSFFSNNNNNNNNNNNNOOOOOOOOOOOOOOHNNNNNNNNNNCOONHCONNNNJJJNOOOHONNNNOONNNNNNNNNNONNNNOOJHQQHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHJJHQHHHHHHHHHHHHHPPPPJSSFPSSJPPGFONNNNNNOOOOOONNNHOONNNHHHOOOOOOOOOONNNNNNNNNOHCFNNNHNNHHHNNNPSPPSSSSSSSSSSSFISSPGPISSSSCNNNNNNNNNNNNONNNNNNNHHNNOONOCNNONNNNNNNNNNNOFKKEHHMMNNCNNMNNNMNCCMNNNNFNONNNNNOONNNONNNFHNHNNNNNNHNNNNNHNNNNNFFNNNNNNNNNNNNNONNNNNOONNNNNNNNSSSSHHHCQQHHQQHHHCJCQFSSJSSINNNNNNNNNNNONHNNNOFFNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFFHNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPPPFPFPPPPPPPPPPFPPFPFFFFPPPPFGPOONNNNNNNNNNNNNNNNNNNNHOOOOOOOOOOOOOOOOONNNNNNNNNNOOOOOOOONNNNNNNNNNOOOOOOOOHOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCPPJFEGJCCNNNNCCONNNNNNNNNNNNNNNNNNNNNFGGGCCCCGPPPPPPPPPPPPSPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFGPPPSNNNNNNNNNNNNNNNNNFOONNNNONNONNNNNNNONNEFNNOONNOONNONNNONOONNNONNPPPPPSSSSSSSSSSPPSSSSSSSSSSSSSSSSSSSSSSSSSPPGGPPPPPPPNNNNHNNECNNHHHHCEEHNNNNNNHHSSSSSSSSSSJSSSSSSSSSSJHHHHHIHHHCCCHSPSJJIFPGPPNNNNNONNOONNNNNNNNNNONNNONONOOOOONNNNNNNNOOOONNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPIFFGNNNNNNNNNNNNNNNNNNHONNNNNNOOONNNNNNNNNNNNOPPSJJSFGPHNNNNNNNNHNNNNQNNNNQNOONHHOHHNNNNNNNHGPPFPPPPNNNNNNNOONNONNCNNCOCCNHNOOONNNNNNOPPPPFGGPPPPPNNNNNNOONNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSIIFFNNNNOOOONNNNNNNNNNNOOOONNNNNNNNNGPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCPPPPPPPPPPPPPPPPPPPPPPPPPPHPPPPPPCPPPPPPPPPPPPPPPPNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPFIFSSSQSQQQQQQQQQNNNNNNNNHOOOOOOOOOOOOOOOOHHHNNNNOONNONNOONNNOHFOOHHHNNNHHHHHHJSSJFSNNNHNHNQHHHOHOHHNNNSSHHHHHCCCCCIIFOOONNNNNNNNNNNNNNNKFNNNMNMNNNNMNMNNNMNNNNHFNNNNNNNNNNNNONNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNOSSISJFFJSJFHONNNNNNOQNNNNNNNCOOCOONNNNNNNNNNNHNNNNNHNNNOQNNNNNNNNNNNNONNNPPPGFPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNONNNNNNNNONNNNNNNHHHQJQQ","n":["GLOBAL_ALIGN","KALLOCATOR","KSTACK_ADDR","KTRACKER","STACK_ADDR","STACK_SIZE","Tracker","allocated_bytes","allocation","boot","borrow","borrow_mut","cli","clone","clone_into","cmos","debug","disk","dprint","dprintln","eh_personality","errno","exec_fn","exec_fn_name","exec_fn_userspace","fmt","freed","freed_bytes","from","fs","gdt","interrupts","into","io","keyboard","kinit","kmain","kprint","kprintln","memory","memory_state","multiboot","new","pci","pic","proc","reload_cs","reload_gdt","reload_tss","rust_oom","size_of_args","sound","spin","syscalls","time","to_owned","to_string","try_from","try_into","type_id","user","utils","vga_buffer","wrappers","ARCH","KERNEL_BASE","MULTIBOOT_MAGIC","MultibootHeader","STACK_SIZE","Stack","_start","architecture","borrow","borrow","borrow_mut","borrow_mut","checksum","enable_paging","flags","from","from","header","header_length","high_kernel","init_paging","into","into","magic","multiboot_ptr","new","page_directory","page_table","setup_page_directory","setup_page_table","size","stack","try_from","try_from","try_into","try_into","type","type_id","type_id","Command","DISKNO","INPUT_BUFFER","Input","LOCK_CMD","NB_SCREEN","SCREEN","TermEmu","Termcaps","borrow","borrow_mut","change_screen","cli","clone","clone_into","commands","current_screen","default","from","handle_event","input","into","new","new_char","new_tcaps","screens","to_owned","try_from","try_into","type_id","unlock_cmd","COMMANDS","Command","KNOWN_CMD","MAX_CMD_LENGTH","NB_CMDS","borrow","borrow_mut","clear","clear","clone","clone_into","command","command_entry","debugfs","fmt","from","halt","handle","help","hexdump","index","insert","interrupt","into","is_known","keymap","len","new","play","process","reboot","shutdown","time","to_owned","try_from","try_into","type_id","valgrind","CURRENTDIR_INODE","DISKNO","PWD","ROOT_INODE","cat","cd","debugfs","help","imap","ls","mkdir","pwd","rm","stat","test","touch","atou","hexdump_parser","hextou","kill","pmap","ps","date","jiffies","uptime","valgrind","ArrowDOWN","ArrowLEFT","ArrowRIGHT","ArrowUP","Ascii","Input","Tcaps","Termcaps","Unknwown","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CMOS_CMD","CMOS_DATA","Time","borrow","borrow_mut","century","day","fmt","from","from_bcd","get_RTC_register","get_time","hours","into","minutes","month","seconds","to_string","try_from","try_into","type_id","weekday","year","DWriter","SERIAL_COM1","SERIAL_COM2","SERIAL_COM3","SERIAL_COM4","SERIAL_COM5","SERIAL_COM6","SERIAL_COM7","SERIAL_COM8","_print","borrow","borrow_mut","from","into","try_from","try_into","type_id","write_str","DiskIO","discover","ide","read_sectors","sector_size","write_sectors","IDEDisk","borrow","borrow_mut","device","diskno","from","into","new","read_sectors","sector_size","try_from","try_into","type_id","write_sectors","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERESTARTNOINTR","ERESTARTSYS","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","ErrNo","STRERROR","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","strerror","to_owned","try_from","try_into","type_id","SYSFILES","close","create","create_from_raw","delete","ext2","file","open","read","socket_pair","write","Ext2","add_dentry","alloc_block","alloc_node","bitmap","block","borrow","borrow_mut","create_dir","create_file","dentry_find","diskio","free_node","from","gdt","get_block_content","get_dentries","get_file_content","get_gdt_entry","get_inode","get_inode_entry","get_inode_of","inode","inode_size","inode_to_bgroup","inode_to_block","inode_to_offset","into","is_valid","list_dir","new","read_block","read_block_map","read_inode_map","read_superblock","recurs_find","remove_dentry","remove_file","sblock","sector_size","show_inode_info","try_from","try_into","type_id","write_block","write_block_map","write_dentries","write_inode","write_inode_map","write_slice","Bitmap","borrow","borrow_mut","from","from","get_free_node","get_node","get_space","into","map","mask","set_node","try_from","try_into","type_id","unset_node","BaseSuperblock","ExtendedSuperblock","FSCREAT_FBSD","FSCREAT_GNU","FSCREAT_LINUX","FSCREAT_MASIX","FSCREAT_OTHER","FSERROR_IGN","FSERROR_KPAN","FSERROR_MRO","FSSTATE_CLEAN","FSSTATE_ERROR","OPTFEAT_AFSSERV","OPTFEAT_HASH_INDEX","OPTFEAT_INODEEXT","OPTFEAT_JOURN","OPTFEAT_PREALLOC","OPTFEAT_RESIZE","REQFEAT_COMPR","REQFEAT_DE_TYPEFIELD","REQFEAT_JOURN_DEV","REQFEAT_REPLAY_JOURN","ROFEAT_64B","ROFEAT_DIR_BTRE","ROFEAT_SPARS","bgroup_bno","bgroup_fno","bgroup_ino","bgroup_superblock","block_count","block_grp_count","block_per_grp","block_size","blocks_count","blocks_unalloc","borrow","borrow","borrow_mut","borrow_mut","bsize","compr","default","eq","eq","err_handle","ext2_sig","extension","first_inode","fmt","fmt","fmt","frag_size","from","from","from","from","fs_state","fsck_interval","fsid","gid","inode_count","inode_count","inode_per_grp","inode_size","inode_size","inode_unalloc","into","into","into_boxed_slice","journ_dev","journ_id","journ_inode","last_fsck","last_mt","last_path","last_wt","major","minor","mount_no","mount_no_max","opt_features","orphan_inode_lst","osid","prealloc_block_dir","prealloc_blocks_files","rblocks_num","req_features","ro_features","set_extension","sig","superblock_block","to_string","try_from","try_from","try_into","try_into","type_id","type_id","uid","unused","version","vol_name","GdtEntry","bitmap_block","bitmap_inode","borrow","borrow_mut","dir_count","fmt","from","from","inode_table","into","try_from","try_into","type_id","unalloc_block","unalloc_inodes","unused","Blockdev","Chardev","Dentry","Directory","Dtype","Fifo","IFLAG_ASDIR","IFLAG_FILECOMPR","IFLAG_HASHINDEX","IFLAG_IMMUTABLE","IFLAG_JOURN","IFLAG_KEEPCPY","IFLAG_NODUMP","IFLAG_NOUPDATE","IFLAG_OAPPEN","IFLAG_SECDEL","IFLAG_SYNC","IPERM_GEXEC","IPERM_GREAD","IPERM_GWRIT","IPERM_OEXEC","IPERM_OREAD","IPERM_OWRIT","IPERM_SETGID","IPERM_SETUID","IPERM_STICK","IPERM_UEXEC","IPERM_UREAD","IPERM_UWRIT","ITYPE_BLOCK","ITYPE_CHARDEV","ITYPE_DIR","ITYPE_FIFO","ITYPE_REGU","ITYPE_SOCK","ITYPE_SYMF","Inode","Regular","Socket","Sym","Unkown","_get_dibp_blocks_no","_get_sibp_blocks_no","_get_tibp_blocks_no","block_addr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count_ds","count_hl","creatt","dbp","default","default","delt","dentry_size","dibp","facl","flags","fmt","fmt","fmt","from","from","from","from","from","gen_no","get_blocks_no","get_blocks_no_from_u32_slice","get_blocks_no_from_u8_slice","get_dibp_blocks_no","get_hardlinks","get_perms","get_sibp_blocks_no","get_tibp_blocks_no","gid","inode","into","into","into","into","into","is_dir","is_valid_block","lat","lmt","name","name_length","new","os_specific1","os_specific2","sibp","size","size_lh","size_uh","tibp","to_owned","to_owned","to_string","tperm","try_from","try_from","try_from","try_into","try_into","try_into","type","type_id","type_id","type_id","uid","FileInfo","FileOperation","borrow","borrow_mut","from","into","name","new","op","raw","read","socket","try_from","try_into","type_id","write","RawFileMemory","borrow","borrow_mut","buffer","deref","deref_mut","from","into","new","roffset","try_from","try_into","type_id","woffset","AF_INET","AF_UNIX","DEFAULT","SOCK_DGRAM","SOCK_RAW","SOCK_STREAM","Socket","SocketDomain","SocketProtocol","SocketType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone","clone_into","clone_into","clone_into","create_socket_pair","dgram_read","dgram_write","domain","endpoint","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","protocol","raw_read","raw_write","read","stream_read","stream_write","stype","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","CODE","DATA","GDT","GDTR","GROWS_DOWN","GROWS_UP","Gdt","NOT_FOR_CPU","PRESENT","READABLE","SegmentDescriptor","Tss","USER","WRITABLE","access","base","base_end","borrow","borrow","borrow_mut","borrow_mut","from","from","gdt_desc","get_base","get_segment","init_tss","into","into","limit","limit_flags","offset","set_access","set_base","set_flag","set_limit","set_segment","size","try_from","try_from","try_into","try_into","tss","type_id","type_id","update","TSS","Tss","borrow","borrow_mut","clone","clone_into","cr3","cs","default","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","es","esi","esp","esp0","esp1","esp2","from","fs","gs","init_tss","into","iopb","ldtr","new","prev","reserved1","reserved10","reserved11","reserved2","reserved3","reserved4","reserved5","reserved6","reserved7","reserved8","reserved9","ss","ss0","ss1","ss2","to_owned","trap","try_from","try_into","type_id","EXCEPTION_SIZE","GDT_OFFSET_KERNEL_CODE","IDT","IDT","IDTR","IDT_MAX_DESCRIPTORS","IDT_SIZE","InterruptDescriptor","Registers","STR_EXCEPTION","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cr3","cs","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","err_code","esi","esp","exception_handler","fmt","from","from","from","from","get_dpl","get_gate_type","get_offset","get_p","get_selector","idt","idt_entries","idtr","init","init_idt","int","int_no","into","into","into","into","irq_stub_0","isr_stub_syscall","isr_stub_table","new","offset","offset_0","offset_1","page_fault_handler","selector","set_dpl","set_gate_type","set_offset","set_p","size","ss","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_attr","type_id","type_id","type_id","type_id","useresp","zero","irq_stub_0","isr_common_stub","isr_err_stub","isr_no_err_stub","isr_stub_0","isr_stub_1","isr_stub_10","isr_stub_11","isr_stub_12","isr_stub_128","isr_stub_13","isr_stub_14","isr_stub_15","isr_stub_16","isr_stub_17","isr_stub_18","isr_stub_19","isr_stub_2","isr_stub_20","isr_stub_21","isr_stub_22","isr_stub_23","isr_stub_24","isr_stub_25","isr_stub_26","isr_stub_27","isr_stub_28","isr_stub_29","isr_stub_3","isr_stub_30","isr_stub_31","isr_stub_32","isr_stub_33","isr_stub_34","isr_stub_35","isr_stub_36","isr_stub_37","isr_stub_38","isr_stub_39","isr_stub_4","isr_stub_40","isr_stub_41","isr_stub_42","isr_stub_43","isr_stub_44","isr_stub_45","isr_stub_46","isr_stub_47","isr_stub_5","isr_stub_6","isr_stub_7","isr_stub_8","isr_stub_9","isr_stub_syscall","isr_stub_table","int","int_no","inb","inl","insb","insl","insw","inw","io_wait","outb","outl","outsb","outsl","outsw","outw","Caps","CmdLeft","CmdRight","Ctrl","KEYMAP","KEYMAP_FR","KEYMAP_US","Keymap","Opt","PRESSED","RELEASED","SPECIAL_KEYS","ShiftLeft","ShiftRight","SpecialKeyFlag","SpecialKeys","alt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","caps","caps_keys","ctrl","delete","down","end","from","from","from","handle_event","home","insert","into","into","into","is_special","keyboard_event","keyboard_to_ascii","keys","left","pgdn","pgup","right","shift_l","shift_r","special_keys","special_l","special_r","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","up","kmain","poc","Poc","borrow","borrow_mut","from","insertion_poc","into","poc","proc_macro_poc","sys_mmap","test_macros","try_from","try_into","type_id","Anon","EXECUTABLE","File","Heap","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_FIXED","MAP_GROWSDOWN","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MemoryZone","PhysAddr","READABLE","REMAP_FIXED","Stack","TypeZone","Unassigned","VirtAddr","WRITABLE","_MAP_DENYWRITE","_MAP_EXECUTABLE","_MAP_FILE","allocator","area","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref_mut","drop","flags","fmt","fmt","from","from","grow","init","init_addr","init_memory","init_memory_addr","into","into","kphys","name","new","offset","paging","protect","remap","size","to_owned","to_owned","to_slice","to_slice_mut","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_zone","AllocError","Allocator","AllocatorInit","KGlobal","align_down","align_up","allocate","allocate_zeroed","borrow","borrow_mut","bump","clone","clone_into","deallocate","eq","fmt","from","init","into","kglobal","linked_list","realloc","to_owned","try_from","try_into","type_id","BumpAllocator","alloc","allocations","borrow","borrow_mut","dealloc","fmt","from","heap_end","heap_start","init","into","new","next","try_from","try_into","type_id","KGlobal","alloc","alloc_impl","alloc_zeroed","allocate","allocate_zeroed","borrow","borrow_mut","clone","clone_into","dealloc","dealloc_impl","deallocate","fmt","from","into","realloc","realloc","to_owned","try_from","try_into","type_id","LinkedListAllocator","ListNode","add_free_region","alloc","alloc_from_region","borrow","borrow","borrow_mut","borrow_mut","dealloc","end_addr","find_region","fmt","from","from","head","init","into","into","new","new","next","size","size_align","start_addr","try_from","try_from","try_into","try_into","type_id","type_id","PAGE_GLOBAL","PAGE_PRESENT","PAGE_USER","PAGE_WRITABLE","alloc_page","alloc_pages","alloc_pages_at_addr","bitmap","disable_paging","enable_paging","free_page","free_pages","get_paddr","get_vaddr","init_paging","kalloc_pages","kalloc_pages_at_addr","page_directory","page_directory","page_table","refresh_tlb","Bitmaps","MAX_MEM","PAGE_SIZE","PHYSMAP","SECTOR_NUMBER","SECTOR_SIZE","Sector","borrow","borrow_mut","claim","claim_range","fmt","force_claim_range","free_page","from","get_page","get_pages","into","maps","new","physmap_as_mut","try_from","try_into","type_id","used","PageDirectory","PageDirectoryEntry","borrow","borrow","borrow_mut","borrow_mut","claim_index_page_frames","claim_index_page_table","claim_index_page_tables","claim_page_table","claim_page_tables","clear","clone","clone_into","entries","fmt","from","from","from","get_accessed","get_avl","get_dirty","get_entry","get_global","get_paddr","get_page_frame","get_page_frames","get_page_frames_at_addr","get_page_table","get_pat","get_pcd","get_present","get_ps","get_pwt","get_rsvd","get_user_supervisor","get_vaddr","get_vaddr","get_writable","into","into","kclaim_index_page_frames","kget_page_frames","kget_page_frames_at_addr","new","remove_page_frame","remove_page_frames","remove_page_table","set_entry","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value","PageTable","PageTableEntry","_start_rodata","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","drop","entries","find_space","fmt","from","from","from","get_accessed","get_avl","get_dirty","get_global","get_paddr","get_pat","get_pcd","get_present","get_pwt","get_user_supervisor","get_vaddr","get_vaddr","get_writable","init","into","into","new","new_frame","new_frames","new_index_frame","set_entry","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value","AcpiNew","AcpiOld","Apm","ApmTable","BasicMemInfo","BootDev","BootDev","BootLoaderName","CmdLine","Efi32","Efi32Ih","Efi64","Efi64Ih","EfiBs","EfiMmap","ElfSections","ElfSymbols","End","FrameBuffer","FrameBufferInfo","LoadBaseAddr","LoadBasePhys","MemInfo","MemMap","MemMapEntry","Mmap","Module","Network","Smbios","TagHeader","TagType","Vbe","baseaddr","biosdev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim_multiboot","cseg","cseg_16","cseg_16_len","cseg_len","dseg","dseg_len","entries","entry_size","entsize","flags","flags","framebuffer_addr","framebuffer_bpp","framebuffer_height","framebuffer_pitch","framebuffer_type","framebuffer_width","from","from","from","from","from","from","from","from","from","from","htype","htype","htype","htype","htype","htype","htype","htype","into","into","into","into","into","into","into","into","into","into","length","load_base_addr","mem_lower","mem_upper","mtype","num","offset","partition","read_tags","reserved","reserved","reserved","shndx","size","size","size","size","size","size","size","size","sub_partition","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","versions","ide","ATA","ATAPI","IDE","IDEController","IDEDevice","IDEType","IDE_IRQ_INVOKED","ata","atapi","borrow","borrow","borrow_mut","borrow_mut","channel","device","devices","from","from","get_device","initialize","into","into","irq","new","polling","read","read_buffer","read_sectors","try_from","try_from","try_into","try_into","type_id","type_id","wait_irq","write","write_sectors","ATA","ATAChannel","ATACommand","ATADirection","ATAError","ATAIdentify","ATAReg","ATAStatus","ATAType","CacheFlush","CacheFlushExt","Identify","IdentifyPacket","MASTER","Packet","Primary","Read","ReadDma","ReadDmaExt","ReadPio","ReadPioExt","SECTOR_SIZE","SLAVE","Secondary","Write","WriteDma","WriteDmaExt","WritePio","WritePioExt","access","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","from","from","from","into","into","into","into","into","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ABRT","AMNF","BBK","IDNF","MC","MCR","TK0NF","UNC","CAPABILITIES","COMMANDSETS","CYLINDERS","DEVICETYPE","FIELDVALID","HEADS","MAX_LBA","MAX_LBA_EXT","MODEL","SECTORS","SERIAL","ALTSTATUS","COMMAND","CONTROL","DATA","DEVADDRESS","ERROR","FEATURES","HDDEVSEL","LBA0","LBA1","LBA2","LBA3","LBA4","LBA5","SECCOUNT0","SECCOUNT1","STATUS","BSY","CORR","DF","DRDY","DRQ","DSC","ERR","IDX","ATAPI","ATAPICommand","Capacity","Eject","Read","SECTOR_SIZE","borrow","borrow","borrow_mut","borrow_mut","capacity","eject","from","from","into","into","read","try_from","try_from","try_into","try_into","type_id","type_id","IDEChannelRegisters","base","bmide","borrow","borrow_mut","clone","clone_into","ctrl","from","into","n_ien","new","polling","read","read_buffer","to_owned","try_from","try_into","type","type_id","write","IDEChannelRegisters","IDEDevice","borrow","borrow_mut","capabilities","channel","clone","clone_into","command_sets","drive","from","into","model","new","print_error","read_sectors","reserved","sector_size","signature","size","to_owned","try_from","try_into","type","type_id","write_sectors","ACPI","Available0","Available1","CoProcessor","FloppyDisk","ICW1_ICW4","ICW1_INIT","ICW1_INTERVAL4","ICW1_LEVEL","ICW1_SINGLE","ICW4_8086","ICW4_AUTO","ICW4_BUF_MASTER","ICW4_BUF_SLAVE","ICW4_SFNM","Keyboard","Mouse","PIC1","PIC1_CMD","PIC1_DATA","PIC1_IRQ_FLOPPY","PIC1_IRQ_KEYBOARD","PIC1_IRQ_OFFSET","PIC1_IRQ_PARA1","PIC1_IRQ_PARA23","PIC1_IRQ_SERIAL1","PIC1_IRQ_SERIAL2","PIC1_IRQ_SLAVE","PIC1_IRQ_TIMER","PIC2","PIC2_CMD","PIC2_DATA","PIC2_IRQ_ACPI","PIC2_IRQ_AVAILABLE0","PIC2_IRQ_AVAILABLE1","PIC2_IRQ_CLOCK","PIC2_IRQ_COPROC","PIC2_IRQ_MOUSE","PIC2_IRQ_OFFSET","PIC2_IRQ_PRIMATA","PIC2_IRQ_SECATA","PIC_EOI","ParallelPort1","ParallelPort23","Pic1","Pic2","PrimaryATA","RealTimeClock","SecondaryATA","Serial1","Serial2","Slave","Timer","borrow","borrow","borrow_mut","borrow_mut","end_of_interrupts","from","from","handler","handlers","into","into","irq_clear_mask","irq_set_mask","pic_init_masks","pic_remap","pit","set_irq0_in_ms","set_pit","setup_pic8259","try_from","try_from","try_into","try_into","type_id","type_id","handler","irq_0","ACC_HIBONLY","ACC_LATCHCOUNT","ACC_LOBHIB","ACC_LOBONLY","CHAN0_DATA","CHAN1_DATA","CHAN2_DATA","CHANNEL_0","CHANNEL_1","CHANNEL_2","FREQUENCY","MODE_0","MODE_1","MODE_2","MODE_3","MODE_4","MODE_5","MODE_6","MODE_7","MODE_CMD","READBACK","RELOAD_VALUE","play_sound","set_irq0_in_ms","set_pit","speaker_off","speaker_on","Id","_exit","change_kernel_stack","exec_fn","process","signal","task","wrapper_fn","DEFAULT_FILE","Disable","MAX_FD","NEXT_PID","PROCESS_TREE","Pid","Process","Run","Status","Thread","Zombie","add_memory_zone","borrow","borrow","borrow_mut","borrow_mut","childs","copy_mem","eq","exe","fds","fmt","fmt","from","from","get_nb_process","get_nb_subprocess","get_running_process","get_signal","get_signal_from_pid","get_signal_running_process","heap","init","into","into","kernel_stack","log_paging","mem_map","new","owner","page_tables","parent","pd","pid","print_all_process","print_tree","remove","search_from_pid","setup_heap","setup_kernel_stack","setup_pagination","setup_stack","signal_handlers","signals","stack","state","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zombify","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSYS","SIGTERM","SIGTRAP","SIGTSTOP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SigHandlerFn","Signal","SignalHandler","SignalType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","fmt","from","from","from","get_signal_type","handler","into","into","into","new","send_to_pid","send_to_process","sender","signal","sigtype","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wstatus","Interruptible","Running","STACK_SIZE","TASKLIST","TASK_STACK","TASK_STACK_OFFSET","Task","TaskStatus","Uninterruptible","_end_handler","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","do_signal","eq","find_task","fmt","from","from","get_running_task","get_segments","handle_signal","init_multitasking","into","into","load_cr3","new","process","regs","remove_task_from_process","save_task","schedule_task","state","swap_task","switch_task","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","wrapper_handler","BeatType","EIGTH","HALF","Partition","QUARTER","SIXTEENTH","THIRTY2ND","WHOLE","add_irregular_note","add_note","add_triplet","borrow","borrow","borrow_mut","borrow_mut","bpm","eigth_note_duration","from","from","half_note_duration","into","into","mii","mii","new","note","notes","notes_frequencies","overworld","overworld","play","play","quarter_note_duration","sixteenth_note_duration","thirty2nd_note_duration","try_from","try_from","try_into","try_into","type_id","type_id","whole_note_duration","BASE","DOTTED","EIGTH","HALF","Note","NoteTempo","NoteType","QUARTER","SIXTEENTH","THIRTY2ND","TRIPLET","WHOLE","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","duration","frequency","from","from","from","into","into","into","new","play","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","A2","A3","A4","A5","Ab2","Ab3","Ab4","Ab5","As2","As3","As4","As5","B2","B3","B4","B5","Bb2","Bb3","Bb4","Bb5","C2","C3","C4","C5","C6","Cs2","Cs3","Cs4","Cs5","D2","D3","D4","D5","Db2","Db3","Db4","Db5","Ds2","Ds3","Ds4","Ds5","E2","E3","E4","E5","Eb2","Eb3","Eb4","Eb5","F2","F3","F4","F5","Fs2","Fs3","Fs4","Fs5","G2","G3","G4","G5","Gb2","Gb3","Gb4","Gb5","Gs2","Gs3","Gs4","Gs5","Rest","KMutex","Mutex","MutexGuard","RawMutex","borrow","borrow","borrow_mut","borrow_mut","data","data","data","data","default","deref","deref_mut","drop","fmt","fmt","from","from","into","into","lock","lock","lock","lock","lock","new","obtain_lock","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","Syscall","_llseek","_newselect","_sysctl","accept4","access","acct","add_key","adjtimex","afs_syscall","alarm","arch_prctl","bdflush","bind","borrow","borrow_mut","bpf","break","brk","capget","capset","chdir","chmod","chown","chown32","chroot","clock_adjtime","clock_adjtime64","clock_getres","clock_getres_time64","clock_gettime","clock_gettime64","clock_nanosleep","clock_nanosleep_time64","clock_settime","clock_settime64","clone","clone3","close","close_range","connect","copy_file_range","creat","create_module","delete_module","dup","dup2","dup3","epoll_create","epoll_create1","epoll_ctl","epoll_pwait","epoll_pwait2","epoll_wait","eventfd","eventfd2","execve","execveat","exit","exit","exit_group","faccessat","faccessat2","fadvise64","fadvise64_64","fallocate","fanotify_init","fanotify_mark","fchdir","fchmod","fchmodat","fchown","fchown32","fchownat","fcntl","fcntl64","fdatasync","fgetxattr","finit_module","flistxattr","flock","fork","fremovexattr","from","fsconfig","fsetxattr","fsmount","fsopen","fspick","fstat","fstat64","fstatat64","fstatfs","fstatfs64","fsync","ftime","ftruncate","ftruncate64","futex","futex_time64","futimesat","get_kernel_syms","get_mempolicy","get_robust_list","get_thread_area","getcpu","getcwd","getdents","getdents64","getegid","getegid32","geteuid","geteuid32","getgid","getgid32","getgroups","getgroups32","getitimer","getpeername","getpgid","getpgrp","getpid","getpmsg","getppid","getpriority","getrandom","getresgid","getresgid32","getresuid","getresuid32","getrlimit","getrusage","getsid","getsockname","getsockopt","gettid","gettimeofday","getuid","getuid32","getxattr","gtty","idle","init_module","inotify_add_watch","inotify_init","inotify_init1","inotify_rm_watch","into","io_cancel","io_destroy","io_getevents","io_pgetevents","io_pgetevents_time64","io_setup","io_submit","io_uring_enter","io_uring_register","io_uring_setup","ioctl","ioperm","iopl","ioprio_get","ioprio_set","ipc","kcmp","kexec_load","keyctl","kill","landlock_add_rule","landlock_create_ruleset","landlock_restrict_self","lchown","lchown32","lgetxattr","link","linkat","listen","listxattr","llistxattr","lock","lookup_dcookie","lremovexattr","lseek","lsetxattr","lstat","lstat64","madvise","mbind","membarrier","memfd_create","memfd_secret","migrate_pages","mincore","mkdir","mkdirat","mknod","mknodat","mlock","mlock2","mlockall","mmap","mmap","mmap2","modify_ldt","mount","mount_setattr","move_mount","move_pages","mprotect","mpx","mq_getsetattr","mq_notify","mq_open","mq_timedreceive","mq_timedreceive_time64","mq_timedsend","mq_timedsend_time64","mq_unlink","mremap","msgctl","msgget","msgrcv","msgsnd","msync","munlock","munlockall","munmap","name_to_handle_at","nanosleep","nfsservctl","nice","oldfstat","oldlstat","oldolduname","oldstat","olduname","open","open_by_handle_at","open_tree","openat","openat2","pause","perf_event_open","personality","pidfd_getfd","pidfd_open","pidfd_send_signal","pipe","pipe2","pivot_root","pkey_alloc","pkey_free","pkey_mprotect","poll","ppoll","ppoll_time64","prctl","pread64","preadv","preadv2","prlimit64","process","process_madvise","process_mrelease","process_vm_readv","process_vm_writev","prof","profil","pselect6","pselect6_time64","ptrace","putpmsg","pwrite64","pwritev","pwritev2","query_module","quotactl","quotactl_fd","read","readahead","readdir","readlink","readlinkat","readv","reboot","recvfrom","recvmmsg","recvmmsg_time64","recvmsg","remap_file_pages","removexattr","rename","renameat","renameat2","request_key","restart_syscall","rmdir","rseq","rt_sigaction","rt_sigpending","rt_sigprocmask","rt_sigqueueinfo","rt_sigreturn","rt_sigsuspend","rt_sigtimedwait","rt_sigtimedwait_time64","rt_tgsigqueueinfo","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getattr","sched_getparam","sched_getscheduler","sched_rr_get_interval","sched_rr_get_interval_time64","sched_setaffinity","sched_setattr","sched_setparam","sched_setscheduler","sched_yield","seccomp","select","semctl","semget","semtimedop_time64","sendfile","sendfile64","sendmmsg","sendmsg","sendto","set_mempolicy","set_robust_list","set_thread_area","set_tid_address","setdomainname","setfsgid","setfsgid32","setfsuid","setfsuid32","setgid","setgid32","setgroups","setgroups32","sethostname","setitimer","setns","setpgid","setpriority","setregid","setregid32","setresgid","setresgid32","setresuid","setresuid32","setreuid","setreuid32","setrlimit","setsid","setsockopt","settimeofday","setuid","setuid32","setxattr","sgetmask","shmat","shmctl","shmdt","shmget","shutdown","sigaction","sigaltstack","signal","signal","signalfd","signalfd4","sigpending","sigprocmask","sigreturn","sigsuspend","socket","socketcall","socketpair","splice","ssetmask","stat","stat64","statfs","statfs64","statx","stime","stty","swapoff","swapon","symlink","symlinkat","sync","sync_file_range","syncfs","syscall_handler","sysfs","sysinfo","syslog","tee","tgkill","time","timer","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_gettime64","timer_settime","timer_settime64","timerfd_create","timerfd_gettime","timerfd_gettime64","timerfd_settime","timerfd_settime64","times","tkill","truncate","truncate64","try_from","try_into","type_id","ugetrlimit","ulimit","umask","umount","umount2","uname","unlink","unlinkat","unshare","uselib","userfaultfd","ustat","utime","utimensat","utimensat_time64","utimes","vfork","vhangup","vm86","vm86old","vmsplice","vserver","wait4","waitid","waitpid","write","writev","RUsage","Time","Timeval","WNOHANG","WUNTRACED","__WCONTINUED","__WCOREDUMP","__WCOREFLAG","__WEXITSTATUS","__WIFCONTINUED","__WIFEXITED","__WIFSIGNALED","__WIFSTOPPED","__WSTOPSIG","__WTERMSIG","__W_EXITCODE","__W_STOPCODE","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","next_task","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","sys_exit","sys_wait4","sys_waitpid","try_from","try_from","try_into","try_into","tv_sec","tv_usec","type_id","type_id","addr","borrow","borrow_mut","fd","flags","fmt","from","into","length","mmap","mmap_arg","offset","prot","sys_mmap","sys_munmap","translate_vaddr","try_from","try_into","type_id","sys_fork","sys_kill","sys_signal","sys_getpid","sys_getppid","sys_getuid","JIFFIES","MONTHCNT","MONTHS","SYSTEM_FRACTION","Time","WDAYS","as_f64","borrow","borrow_mut","ctime","from","get_timestamp","into","isleap","jiffies","jiffies_inc","microsleep","millisecond","raw_delay_ms","second","sleep","sleep_ms","try_from","try_into","type_id","USER_HEAP_ADDR","USER_STACK_ADDR","exec_fn_userspace","jump_usermode","test_user_page","userfunc","userfunc_end","arcm","flags","math","path","queue","Arcm","KArcm","RawArcm","arc","arc","arc","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","execute","from","into","new","to_owned","try_from","try_into","type_id","FlagOp","Flags","borrow","borrow_mut","default","disable","disable","enable","enable","fmt","from","into","is_disable","is_disable","is_enable","is_enable","new","to_string","toggle","toggle","try_from","try_into","type_id","roundup","Path","as_bytes","as_str","borrow","borrow_mut","cleanup","clone","clone_into","extension","file_name","fmt","from","has_root","inner","into","is_absolute","is_dir","is_file","is_relative","join","len","new","parent","to_owned","to_string","try_from","try_into","type_id","Queue","borrow","borrow_mut","from","front","front_mut","get","get_mut","into","is_empty","len","new","peek","pop","push","try_from","try_into","type_id","vec","BUFFER_HEIGHT","BUFFER_WIDTH","Buffer","NB_SCREEN","SCREENS","Screen","ScreenChar","VGA_BUFFER","VGA_LEN","WRITER","Writer","_print","ascii_code","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","change_color","chcolor","clear","clear_row","clone","clone","clone_into","clone_into","color","color_code","command","cursor","cursor","cursor","default","default","del_byte","eq","fmt","fmt","from","from","from","get_command","get_screen","hexdump","into","into","into","move_cursor","new","panic","render","reset","save","screen_index","screenclear","scroll_up","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vga_buffer","write_byte","write_str","write_string","Black","Blue","Brown","Color","ColorCode","Cyan","DarkGray","Green","LightBlue","LightCyan","LightGray","LightGreen","LightRed","Magenta","Pink","Red","White","Yellow","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","fmt","fmt","from","from","into","into","new","new_default","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Cursor","borrow","borrow_mut","clone","clone_into","color_code","disable","enable","fmt","from","get_color_code","get_pos","into","new","pos","set_color_code","set_pos","to_owned","try_from","try_into","type_id","update","_cli","_rst","_sti","cli","cli_count","hlt","sti"],"q":[[0,"kernel"],[64,"kernel::boot"],[103,"kernel::cli"],[134,"kernel::cli::commands"],[172,"kernel::cli::commands::debugfs"],[188,"kernel::cli::commands::hexdump"],[191,"kernel::cli::commands::process"],[194,"kernel::cli::commands::time"],[197,"kernel::cli::commands::valgrind"],[198,"kernel::cli::input"],[229,"kernel::cmos"],[252,"kernel::debug"],[270,"kernel::disk"],[276,"kernel::disk::ide"],[290,"kernel::errno"],[428,"kernel::fs"],[439,"kernel::fs::ext2"],[489,"kernel::fs::ext2::bitmap"],[505,"kernel::fs::ext2::block"],[607,"kernel::fs::ext2::gdt"],[624,"kernel::fs::ext2::inode"],[743,"kernel::fs::file"],[759,"kernel::fs::file::raw"],[773,"kernel::fs::file::socket"],[841,"kernel::gdt"],[887,"kernel::gdt::tss"],[940,"kernel::interrupts"],[1030,"kernel::interrupts::idt"],[1085,"kernel::interrupts::int"],[1087,"kernel::io"],[1100,"kernel::keyboard"],[1161,"kernel::kmain"],[1163,"kernel::kmain::poc"],[1176,"kernel::memory"],[1248,"kernel::memory::allocator"],[1274,"kernel::memory::allocator::bump"],[1291,"kernel::memory::allocator::kglobal"],[1313,"kernel::memory::allocator::linked_list"],[1344,"kernel::memory::paging"],[1365,"kernel::memory::paging::bitmap"],[1390,"kernel::memory::paging::page_directory"],[1448,"kernel::memory::paging::page_table"],[1495,"kernel::multiboot"],[1649,"kernel::pci"],[1650,"kernel::pci::ide"],[1687,"kernel::pci::ide::ata"],[1758,"kernel::pci::ide::ata::ATAError"],[1766,"kernel::pci::ide::ata::ATAIdentify"],[1777,"kernel::pci::ide::ata::ATAReg"],[1794,"kernel::pci::ide::ata::ATAStatus"],[1802,"kernel::pci::ide::atapi"],[1825,"kernel::pci::ide::channel"],[1846,"kernel::pci::ide::device"],[1872,"kernel::pic"],[1950,"kernel::pic::handlers"],[1952,"kernel::pic::pit"],[1979,"kernel::proc"],[1987,"kernel::proc::process"],[2051,"kernel::proc::signal"],[2129,"kernel::proc::task"],[2175,"kernel::sound"],[2217,"kernel::sound::note"],[2254,"kernel::sound::notes_frequencies"],[2324,"kernel::spin"],[2360,"kernel::syscalls"],[2812,"kernel::syscalls::exit"],[2865,"kernel::syscalls::mmap"],[2884,"kernel::syscalls::process"],[2885,"kernel::syscalls::signal"],[2887,"kernel::syscalls::timer"],[2890,"kernel::time"],[2915,"kernel::user"],[2922,"kernel::utils"],[2927,"kernel::utils::arcm"],[2948,"kernel::utils::flags"],[2971,"kernel::utils::math"],[2972,"kernel::utils::path"],[3000,"kernel::utils::queue"],[3019,"kernel::vga_buffer"],[3092,"kernel::vga_buffer::color"],[3137,"kernel::vga_buffer::cursor"],[3159,"kernel::wrappers"],[3166,"core::fmt"],[3167,"core::fmt"],[3168,"alloc::string"],[3169,"core::result"],[3170,"core::any"],[3171,"alloc::vec"],[3172,"core::option"],[3173,"core::fmt"],[3174,"core::ptr::non_null"],[3175,"core::default"],[3176,"core::marker"],[3177,"core::fmt"],[3178,"core::ops::function"],[3179,"core::sync::atomic"],[3180,"core::clone"],[3181,"core::panic::panic_info"]],"d":["","","","","","","","","","Define boot and kernel entrypoint","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","GDT and TSS setup/helpers","Setup interrupts and exception handler","Calls <code>U::from(self)</code>.","Wrappers for in and out asm instructions","Keyboard handler and key mapping","","","","","Allocator, Box and Pagination","","This module aim to parse mutliboot specification","","","Setup Programmable Interrupt Controller","Processus, Tasks and Signals","","","","","","","","Syscall handler and all implemented syscalls","","","","","","","Testing user space code","Module containing little utils","Handler for vga buffer","Wrappers for cli, sti and hlt asm instructions","Arch for multiboot: protected mode","Base address for higher half kernel","Multiboot magic number","Multiboot 1.6 Header","Kernel init stack size at boot","","Kernel entrypoint","","","","","","","Enable paging by loading <code>page_directory</code> into <code>cr3</code>","","Returns the argument unchanged.","Returns the argument unchanged.","multiboot header to define entrypoint inside linker script","","Higher half kernel entrypoint","Setup basic pagination &amp; load gdt","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Address to the multiboot structure used by GRUB","","Kernel page directory","Page table containing kernel code","Setup page tables in <code>page_directory</code>","Setup kernel page table","","Kernel stack","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Ask cmos for actual date and time Current implementation â€¦","","Calls <code>U::from(self)</code>.","","","","","","","","","","Dummy structure to impl fmt::write","","","","","","","","","Wrapper function to call from print macros","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Send to SERIAL_COM2 all bytes from s","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Close a file given its file descriptor. This does not â€¦","Take information on a file and add it to SYSFILES if it â€¦","Create a file given its name and a predefined buffer. The â€¦","Delete file from SYSFILE given its name Should be updated â€¦","","","Look for a file given its name in SYSFILES and open it. â€¦","This function mimic the linux read syscall. Look for a â€¦","Create and open a pair of socket given itâ€™s domain, type â€¦","This function mimic the linux write syscall. Look for a â€¦","Current read/write use entire block to perform operations â€¦","","","","","","","","Helper function to create a folder at a given path","","Find file inside dentry given the dentry inode and file â€¦","","","Returns the argument unchanged.","","","","Helper function to get content of a file. Does not yet â€¦","Read disk to recover Group Descriptor Table entry given an â€¦","","Read disk to recover inode struct correcponding to the â€¦","Find file given itâ€™s path, start search from root â€¦","","Give inode size indicated by Superblock","Convert an inode number to itâ€™s corresponding Group â€¦","Convert an inode number to itâ€™s corresponding Block â€¦","Convert an inode number to itâ€™s offset inside block","Calls <code>U::from(self)</code>.","","Helper function to list all entries in a directory Does â€¦","","Read an entire block from disk","","","","Perform recursive call to find file pass as argument â€¦","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","Superblock always take 1024 bytes with/without Extended â€¦","Present if Major &gt;= 1 Bytes from 236 to 1023 arenâ€™t used","","","","","","","","","","","","","","","","","","","","","","","","Number of blocks in each block group","Number of fragments in each block group","Number of inodes in each block group","Block group that this superblock is part of (if backup â€¦","","","","log2 (block size) - 10. (In other words, the number to â€¦","Total number of blocks in file system","Total number of unallocated blocks","","","","","","Compression algorithms used (see Required features above)","","","","What to do when an error is detected (see below)","Ext2 signature (0xef53), used to help confirm the presence â€¦","","First non-reserved inode in file system. (In versions &lt; â€¦","","","","log2 (fragment size) - 10. (In other words, the number to â€¦","","Returns the argument unchanged.","Returns the argument unchanged.","","File system state (see below)","Interval (in POSIX time) between forced consistency checks â€¦","File system ID (what is output by blkid)","Group ID that can use reserved blocks","","Total number of inodes in file system","","","Size of each inode structure in bytes. (In versions &lt; 1.0, â€¦","Total number of unallocated inodes","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Journal device","Journal ID (same style as the File system ID above)","Journal inode","POSIX time of last consistency check (fsck)","Last mount time (in POSIX time)","Path volume was last mounted to (C-style string: â€¦","Last written time (in POSIX time)","Major portion of version (combine with Minor portion above â€¦","Minor portion of version (combine with Major portion below â€¦","Number of times the volume has been mounted since its last â€¦","Number of mounts allowed before a consistency check (fsck) â€¦","Optional features present (features that are not required â€¦","Head of orphan inode list","Operating system ID from which the filesystem on this â€¦","Number of blocks to preallocate for directories","Number of blocks to preallocate for files","Number of blocks reserved for superuser (see offset 80)","Required features present (features that are required to â€¦","Features that if not supported, the volume must be mounted â€¦","","","Block number of the block containing the superblock (also â€¦","","","","","","","","User ID that can use reserved blocks","(Unused)","","Volume name (C-style string: characters terminated by a 0 â€¦","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like blocks, each inode has a numerical address. It is â€¦","","","","","","","","Block address of fragment","","","","","","","","","","","Count of disk sectors (not Ext2 blocks) in use by this â€¦","Count of hard links (directory entries) to this inode. â€¦","Creation Time (in POSIX time)","Direct Block Pointers","","","Deletion time (in POSIX time)","","Doubly Indirect Block Pointer (Points to a block that is a â€¦","In Ext2 version 0, this field is reserved. In version &gt;= â€¦","Flags (see below)","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Generation number (Primarily used for NFS)","","","","","","","","","Group ID","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Last Access Time (in POSIX time)","Last Modification time (in POSIX time)","","","","Operating System Specific value #1","Operating System Specific Value #2","Singly Indirect Block Pointer (Points to a block that is a â€¦","","Lower 32 bits of size in bytes","In Ext2 version 0, this field is reserved. In version &gt;= â€¦","Triply Indirect Block Pointer (Points to a block that is a â€¦","","","","Type and Permissions (see below)","","","","","","","","","","","User ID","Contains all file information. Current information are â€¦","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Base representation of a file in Memory Currently doesnâ€™â€¦","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a default Anonymous file with 1 PAGE of memory","","","","","","","","","","","","Socket structure representation. Socket alone canâ€™t do â€¦","Represent the different domains of a socket. AF_UNIX bind â€¦","Represent the protocol bound to the socket. Generally only â€¦","Represent the type of the socket. SOCK_RAW: Not yet â€¦","","","","","","","","","","","","","","","","Create two sockets that are bound together, and can be â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a socket given itâ€™s domain, type and protocol","","","","Redirect to the read appropriate to the socket type","","","","","","","","","","","","","","","","","","","Redirect to the write appropriate to the socket type","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Check if keyboard event is ready","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Valid only for 64 bits system","","","","","","","","","","Flags Flags starting with an underscore re ignored by â€¦","","","","","","","","","Prots","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Add pages to the memory zone, growing upward for most â€¦","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Change protection of a memory zone","Remap the memory zone in the virtual address space using â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize the paging:","","","","","","","","","","","","","","","","Claim a page at a specific physical address","Claim multiple pages from specific physical address","","Force a claim of multipage pages from specific physical â€¦","Indicates to the bitmaps that a page is not used anymore","Returns the argument unchanged.","Get the next claimable page","Get multiple pages that are physically next to each other","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Obtain reference to an existing device.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a controller with default devices","","","","Read sector from a drive","","","","","","","","","Read sector from a drive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Read sector from a device","","","","","","","","","","Write sector from a device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arcm is needed to protect MemoryZone only if the memory â€¦","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","MutexGuard that provide data mutable access","Mutex structure to prevent data races","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lock the mutex if available otherwise wait until a lock is â€¦","","","","","Create a new mutex with the given data stored inside","Loop until the inner lock as the value false then write â€¦","","","","","Try to lock the mutex. Returning a Guard if successfull","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</codearameters order: ebx, ecx, edx, esi, edi, ebp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","WARNING: Currently flags sended to MemoryZone are ignored â€¦","","","","hint: Adress at which the kernel will look for free space. â€¦","Current implementation have a lot of unverified cases.","Translate VirtAddr from userspace to kernelspace This can â€¦","","","","Create a new process from the calling process, copy stack, â€¦","Returns 0 on success, otherwise, returns a negative value â€¦","","","","","","","","","","","","","","","Returns the argument unchanged.","Construct a Time structure using the JIFFIES and â€¦","Calls <code>U::from(self)</code>.","","Return the value stored in the JIFFIES static variable","Increment by one the JIFFIES counter","Unaccurate sleep for 1 microsecond io_wait should take 1~4 â€¦","","Wait x millisecond looping over io_wait This is quite â€¦","","Sleep until x millisecond have passed","","","","","","","","","","","","","","","","","","","Wrap the given type into an Arc and a Mutex. Arc allow â€¦","","","","","","","","","","","Clone the current Arc and send it to the function pass in â€¦","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new RawArcm by copying the data","","","","","To use this trait the type T has to allow interior â€¦","","","","","","disable x bit.","","enable x bit.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","check if the x bit is unset. safety: no check performed, â€¦","","check if the x bit is set. safety: no check performed, â€¦","","","","Toggle bit.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simply replace all row by spaces to visualy clear it","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Move CURSOR one line lower and move all lines if needed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,10,10,113,10,113,10,0,10,10,113,0,10,0,0,10,113,10,0,10,0,0,0,0,10,0,10,113,10,113,10,10,113,0,0,0,0,0,0,0,0,0,11,11,11,0,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,19,19,0,19,19,19,19,0,0,19,19,0,19,0,0,19,19,0,19,19,0,19,19,0,0,0,0,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,13,0,13,0,13,13,16,13,16,13,16,13,16,13,16,13,16,13,16,13,16,13,16,13,16,13,16,0,0,0,23,23,23,23,23,23,0,0,0,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,0,0,0,26,26,26,0,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,31,31,31,31,31,31,31,31,0,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,0,0,40,40,0,0,40,40,40,40,0,0,40,0,40,40,40,40,0,40,40,40,40,40,40,0,40,40,40,40,0,40,40,0,40,40,0,40,40,40,40,40,40,40,40,40,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,47,46,46,46,46,46,46,46,47,46,47,46,47,46,46,47,46,46,46,47,46,46,47,46,46,46,47,47,46,46,47,46,46,46,46,46,47,46,46,47,46,47,47,47,46,46,47,46,46,46,46,46,47,47,46,47,47,46,47,47,46,46,46,46,46,47,46,47,46,47,46,47,46,47,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,114,114,0,114,0,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,43,43,43,43,114,43,41,114,43,41,43,41,43,41,43,43,43,43,43,41,43,41,43,43,43,43,43,41,114,43,43,41,41,43,43,43,43,43,43,43,43,43,43,41,114,43,43,41,41,43,43,43,43,41,41,43,43,43,43,43,43,43,43,43,41,43,43,114,43,41,114,43,41,41,114,43,41,43,0,0,33,33,33,33,33,33,33,0,34,0,33,33,33,34,0,50,50,50,50,50,50,50,50,50,50,50,50,50,36,36,38,37,37,37,0,0,0,0,52,36,37,38,52,36,37,38,52,36,37,38,36,37,38,0,52,52,52,52,36,37,38,36,37,38,52,36,37,38,52,36,37,38,52,52,52,52,52,52,52,52,36,37,38,52,36,37,38,52,36,37,38,52,36,37,38,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,53,53,115,53,115,53,115,53,0,53,0,0,115,53,53,53,115,53,53,53,53,0,115,115,53,115,53,0,115,53,115,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,116,117,55,56,116,117,55,56,55,56,55,56,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,116,117,55,56,56,56,56,56,56,0,116,116,56,0,0,55,116,117,55,56,0,0,0,55,117,56,56,0,56,56,56,56,56,117,55,55,56,116,117,55,56,116,117,55,56,56,116,117,55,56,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,118,118,118,0,0,0,0,118,0,0,0,118,118,0,0,119,119,120,118,119,120,118,119,120,119,119,119,119,119,120,118,0,119,119,119,120,118,0,0,0,120,119,119,119,119,119,119,120,119,119,119,120,118,119,120,118,119,120,118,119,0,0,0,121,121,121,0,121,121,0,0,0,121,121,121,57,0,57,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,57,0,0,0,0,0,0,51,57,51,57,51,57,51,57,51,51,51,51,51,57,51,57,51,51,51,51,0,0,57,51,51,51,51,51,0,51,51,51,57,51,51,51,51,57,51,57,51,57,51,51,0,0,0,0,0,0,58,58,60,60,0,60,60,58,60,60,60,61,60,0,0,58,60,60,60,60,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,63,0,63,63,63,63,63,63,0,63,63,63,63,63,0,63,63,63,63,63,0,0,64,64,64,64,65,64,65,64,65,64,65,64,65,64,64,64,65,64,65,65,65,64,65,64,65,64,65,64,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,0,66,66,66,66,0,0,67,68,67,68,67,67,67,67,67,67,68,68,67,68,67,68,68,68,68,68,67,68,68,67,67,67,67,68,68,68,68,68,68,68,67,68,68,67,68,67,67,67,67,67,67,67,67,68,68,67,68,67,68,67,68,68,0,0,0,69,70,69,70,69,70,70,69,69,69,70,69,70,70,70,70,70,70,70,70,70,70,70,70,69,70,70,69,69,70,69,69,69,69,69,70,70,69,70,69,70,69,70,70,122,122,122,0,122,0,122,122,122,122,122,122,122,122,122,122,0,122,122,0,122,0,0,0,0,122,122,122,122,0,0,122,123,124,122,125,126,124,123,127,128,129,130,131,122,125,126,124,123,127,128,129,130,131,0,130,130,130,130,130,130,127,127,129,125,130,128,128,128,128,128,128,122,125,126,124,123,127,128,129,130,131,125,126,124,127,128,129,130,131,122,125,126,124,123,127,128,129,130,131,123,131,126,126,123,129,130,124,0,123,128,129,129,125,126,124,127,128,129,130,131,124,122,125,126,124,123,127,128,129,130,131,122,125,126,124,123,127,128,129,130,131,122,125,126,124,123,127,128,129,130,131,130,127,0,132,132,0,0,0,0,0,0,0,132,71,132,71,0,0,71,132,71,71,71,132,71,71,71,71,71,71,71,132,71,132,71,132,71,71,71,71,0,0,0,0,0,0,0,0,0,73,73,73,73,133,73,74,134,73,73,73,73,0,133,74,134,73,73,73,73,135,133,134,135,73,74,133,134,135,73,74,73,74,73,74,133,134,135,73,74,133,134,135,73,74,73,74,133,134,135,73,74,133,134,135,73,74,133,134,135,73,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,136,136,0,136,137,136,137,137,137,136,137,136,137,137,136,137,136,137,136,137,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,138,138,138,138,139,0,0,0,0,0,0,0,0,0,0,139,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,139,0,0,138,138,138,139,139,139,139,139,138,139,138,0,139,138,0,0,139,138,0,0,0,0,0,0,0,0,139,138,139,138,139,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,0,0,77,0,77,77,76,76,77,76,77,76,76,77,76,76,76,77,76,77,76,76,76,76,76,76,76,76,76,77,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,76,77,76,77,76,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,0,80,78,79,80,78,79,80,78,79,80,78,79,78,79,78,80,78,79,0,80,80,78,79,79,79,79,79,80,79,80,78,79,80,78,79,80,78,79,80,78,79,79,81,81,0,0,0,0,0,0,81,0,82,81,82,81,81,81,82,81,0,81,82,81,82,0,82,82,82,81,0,82,82,82,82,0,0,82,0,0,81,82,81,82,81,82,81,0,0,86,86,0,86,86,86,86,83,83,83,86,83,86,83,83,83,86,83,83,86,83,0,83,83,0,83,0,0,83,0,83,83,83,83,86,83,86,83,86,83,83,85,85,84,84,0,0,0,84,84,84,85,84,84,85,87,84,85,87,87,87,84,85,87,84,85,87,87,87,84,85,87,84,85,87,84,85,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,91,88,91,140,141,88,91,88,91,91,91,88,91,88,91,88,91,88,140,141,88,91,88,88,88,91,88,91,88,88,91,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,93,143,93,143,93,143,93,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,0,143,93,143,93,143,143,143,93,94,94,94,94,94,94,94,94,94,0,0,94,94,0,0,0,94,94,94,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,0,95,0,95,0,0,0,0,95,0,95,0,0,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,145,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,100,100,100,101,100,101,100,100,100,100,101,100,101,100,100,100,101,100,100,100,100,0,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,0,0,0,0,0,0,0,0,0,0,0,109,106,108,109,106,108,109,108,0,106,106,106,108,109,108,109,0,109,108,0,106,108,108,109,106,109,108,109,106,108,109,108,106,0,106,108,109,106,108,0,106,108,106,106,0,106,108,109,106,108,109,106,108,109,106,108,109,106,106,106,106,111,111,111,0,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,107,111,107,111,107,111,107,107,111,107,111,107,111,107,111,107,107,107,111,107,111,107,111,107,111,107,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[[-1,-2],2,[],[]],0,0,0,0,0,[[],2],0,0,0,0,[[1,3],4],0,0,[-1,-1,[]],0,0,0,[-1,-2,[],[]],0,0,[[],2],0,0,0,0,[[],2],0,[[],1],0,0,0,0,0,0,[5,6],0,0,0,0,0,[-1,-2,[],[]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-1,[]],[-1,-1,[]],0,0,[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],10],0,0,0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[11,12],2],[[],2],[11,11],[[-1,-2],2,[],[]],0,0,[[],11],[-1,-1,[]],[[11,13,14],2],0,[-1,-2,[],[]],[[],11],[[11,15,14],2],[[11,16,14],2],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[17,2],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[7]]],2],[19,2],[19,19],[[-1,-2],2,[],[]],0,[[20,7,20,20],2],0,[[19,3],4],[-1,-1,[]],[[[18,[7]]],2],[[19,15],2],[[[18,[7]]],2],0,0,[[19,15],[[8,[2,2]]]],[[[18,[7]]],2],[-1,-2,[],[]],[19,[[21,[20]]]],[[[18,[7]]],2],[19,20],[[],19],[[[18,[7]]],2],0,[[[18,[7]]],2],[[[18,[7]]],2],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,[[[18,[7]]],2],[[[18,[7]]],2],[[[18,[7]]],2],[[],2],[[[18,[7]]],2],[[[18,[7]]],2],[[[18,[7]]],2],[[],2],[[[18,[7]]],2],[[[18,[7]]],2],[[],2],[[[18,[7]]],2],[22,[[21,[20]]]],[[[18,[7]]],2],[22,[[21,[20]]]],[[[18,[7]]],2],[[[18,[7]]],2],[[[18,[7]]],2],[[[18,[7]]],2],[[[18,[7]]],2],[[[18,[7]]],2],[[[18,[7]]],2],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[16,16],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[13,3],4],[[16,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[23,3],4],[-1,-1,[]],0,[14,14],[[],23],0,[-1,-2,[],[]],0,0,0,[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,[24,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[25,22],4],0,[[],[[18,[[27,[26]]]]]],0,[[26,14,28,28],[[8,[2,14]]]],[26,20],[[26,14,28,28],[[8,[2,14]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[-1,-2,[],[]],[[14,29],30],[[30,14,28,28],[[8,[2,14]]]],[30,20],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[30,14,28,28],[[8,[2,14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[-1,-2],2,[],[]],[[31,31],32],[[31,3],4],[-1,-1,[]],[-1,-2,[],[]],[31,22],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[20,2],[33,[[8,[2,31]]]],[[22,-1],[[8,[2,31]]],34],[22,2],0,0,[22,[[8,[20,31]]]],[[20,[35,[14]],20],[[8,[20,31]]]],[[36,37,38,[39,[20]]],[[8,[20,31]]]],[[20,[35,[14]],20],[[8,[20,31]]]],0,[[40,20,41],2],[[40,20],20],[[40,20],20],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[40,22,20],2],[[40,22,20],2],[[40,20,22],[[21,[41]]]],0,[[40,20,20],2],[-1,-1,[]],0,[[[18,[14]],20],[[18,[15]]]],[[40,28],[[18,[41]]]],[[40,22,20],[[18,[15]]]],[[40,20],42],[[40,20],43],[[40,20],43],[[40,22],[[21,[[2,[20,43]]]]]],0,[40,44],[[40,28],28],[[40,28],28],[[40,28],28],[-1,-2,[],[]],[40,32],[[40,22,20],[[18,[41]]]],[[[27,[26]]],[[8,[40,14]]]],[[40,28],[[18,[14]]]],[[40,20],45],[[40,20],45],[[[27,[26]]],[[8,[46,14]]]],[[40,22,20],[[21,[[2,[20,43]]]]]],[[40,20,41],2],[[40,22,20],2],0,0,[[40,22,20],2],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[40,28,[35,[14]]],2],[[40,20,45],2],[[40,28,[18,[41]]],[[8,[2,2]]]],[[40,20,43],2],[[40,20,45],2],[[40,28,20,[35,[14]]],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[35,[14]]],45],[-1,-1,[]],[45,[[21,[20]]]],[[45,20],32],[45,[[2,[20,20]]]],[-1,-2,[],[]],0,[[45,20],14],[[45,20],2],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[45,20],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[46,28],[46,28],[46,28],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,20],0,[[],46],[[46,46],32],[[47,47],32],0,0,0,0,[[46,3],4],[[46,3],4],[[47,3],4],0,[[[35,[14]]],46],[-1,-1,[]],[-1,-1,[]],[[[35,[14]]],47],0,0,0,0,[46,28],0,[46,28],[46,44],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[46,[[27,[[35,[14]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[46,47],2],[46,44],0,[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,[46,[[2,[28,44]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[42,3],4],[[[35,[14]]],42],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[28,40],[[18,[28]]]],[[28,40],[[18,[28]]]],[[28,40],[[18,[28]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[41,41],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,0,[[],43],[[],41],0,0,0,0,0,[[43,3],4],[[43,3],4],[[41,3],4],[-1,-1,[]],[-1,-1,[]],[[[35,[14]]],43],[[[35,[14]]],41],[-1,-1,[]],0,[43,[[18,[28]]]],[[[35,[28]]],[[18,[28]]]],[[[35,[14]]],[[18,[28]]]],[[43,40],[[18,[28]]]],[43,44],[43,44],[[43,40],[[18,[28]]]],[[43,40],[[18,[28]]]],0,0,[-1,-2,[],[]],[43,[[18,[14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[41,[[18,[14]]]],[43,32],[28,32],0,0,0,0,[[],43],0,0,0,[43,48],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,7,[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,[[7,[49,[34]]],33],0,0,[[34,[35,[14]],20],[[8,[20,31]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[34,[35,[14]],20],[[8,[20,31]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[50,-1,[]],[50,51],[-1,-1,[]],[-1,-2,[],[]],[[],50],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[36,36],[37,37],[38,38],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[36,37,38],[[8,[[2,[52,52]],31]]]],[[52,[35,[14]],20],[[8,[20,31]]]],[[52,[35,[14]],20],[[8,[20,31]]]],0,0,[[36,36],32],[[37,37],32],[[38,38],32],[[36,3],4],[[37,3],4],[[38,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,37,38],52],0,[[52,[35,[14]],20],[[8,[20,31]]]],[[52,[35,[14]],20],[[8,[20,31]]]],[[52,[35,[14]],20],[[8,[20,31]]]],[[52,[35,[14]],20],[[8,[20,31]]]],[[52,[35,[14]],20],[[8,[20,31]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[52,[35,[14]],20],[[8,[20,31]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],0,[53,28],[20,53],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[53,14],2],[[53,28],2],[[53,14],2],[[53,28],2],[[20,28,28,14,14],2],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],[-1,9,[]],[[],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[[-1,-2],2,[],[]],0,0,[[],54],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,[]],0,0,[28,2],[-1,-2,[],[]],0,0,[[],54],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[55,55],[56,56],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[55,2],[[55,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[56,14],[56,14],[56,28],[56,14],[56,44],0,0,0,[[56,28,44,14],2],[[],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],55],0,0,0,[55,2],0,[[56,14],2],[[56,14],2],[[56,28],2],[[56,14],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,[[],2],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[14,2],0,[44,14],[44,28],[[44,14,28],2],[[44,28,28],2],[[44,44,28],2],[44,44],[[],2],[[44,14],2],[[44,28],2],[[44,14,28],2],[[44,28,28],2],[[44,44,28],2],[[44,44],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[21,[[2,[13,14]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,32],[[],32],[14,[[21,[15]]]],0,0,0,0,0,0,0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[[],6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,[[2,[28,20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,57],[51,51],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[51,-1,[]],[51,[[35,[14]]]],[51,2],0,[[57,3],4],[[51,3],4],[-1,-1,[]],[-1,-1,[]],[51,[[8,[2,2]]]],[[57,20,28,32],51],[[28,57,20,28,32],51],[[20,28,32],[[8,[28,2]]]],[[28,20,28,32],[[8,[28,2]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],51],0,0,[[51,28],2],[[51,28,20,28],[[8,[28,2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[51,[[35,[14]]]],[51,[[35,[14]]]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,[[28,20],28],[[28,20],28],[[58,5],[[8,[[59,[14]],60]]]],[[58,5],[[8,[[59,[14]],60]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[60,60],[[-1,-2],2,[],[]],[[58,[59,[14]],5],2],[[60,60],32],[[60,3],4],[-1,-1,[]],[[61,28,20],2],[-1,-2,[],[]],0,0,[[58,[59,[14]],5,20],[[8,[[59,[14]],60]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[[62,5],14],0,[-1,-2,[],[]],[-1,-2,[],[]],[[62,14,5],2],[[62,3],4],[-1,-1,[]],0,0,[[62,28,20],2],[-1,-2,[],[]],[[],62],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[5,14],[[63,5,32],[[8,[[59,[14]],60]]]],[5,14],[[63,5],[[8,[[59,[14]],60]]]],[[63,5],[[8,[[59,[14]],60]]]],[-1,-2,[],[]],[-1,-2,[],[]],[63,63],[[-1,-2],2,[],[]],[[14,5],2],[[63,14,5],2],[[63,[59,[14]],5],2],[[63,3],4],[-1,-1,[]],[-1,-2,[],[]],[[14,5,20],14],[[63,[59,[14]],5,20],[[8,[[59,[14]],60]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,[[64,28,20],2],[[64,5],14],[[65,20,20],[[8,[28,2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[64,14,5],2],[65,28],[[64,20,20],[[21,[[2,[65,28]]]]]],[[65,3],4],[-1,-1,[]],[-1,-1,[]],0,[[64,28,20],2],[-1,-2,[],[]],[-1,-2,[],[]],[[],64],[20,65],0,0,[5,[[2,[20,20]]]],[65,28],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,0,[28,[[8,[28,2]]]],[[20,28],[[8,[28,2]]]],[[28,20,28],[[8,[28,2]]]],0,0,0,[28,2],[[28,20],2],0,0,[[],2],[[20,28],[[8,[28,2]]]],[[28,20,28],[[8,[28,2]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[66,28],[[8,[28,20]]]],[[66,28,20],[[8,[28,20]]]],[[66,3],4],[[66,28,20],2],[[66,28],2],[-1,-1,[]],[66,[[8,[28,2]]]],[[66,20],[[8,[28,2]]]],[-1,-2,[],[]],0,[[],66],[[],66],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[67,20,20,20,28],[[8,[2,2]]]],[[67,20,28],[[8,[20,2]]]],[[67,20,20,28],[[8,[20,2]]]],[[67,28],[[8,[20,2]]]],[[67,20,28],[[8,[20,2]]]],[67,2],[68,68],[[-1,-2],2,[],[]],0,[[68,3],4],[-1,-1,[]],[28,68],[-1,-1,[]],[68,14],[68,14],[68,14],[[67,20],68],[68,14],[68,28],[[67,28],[[8,[28,2]]]],[[67,20,28],[[8,[28,2]]]],[[67,28,20,28],[[8,[28,2]]]],[[67,20],69],[68,14],[68,14],[68,14],[68,14],[68,14],[68,14],[68,14],[67,28],[68,28],[68,14],[-1,-2,[],[]],[-1,-2,[],[]],[[67,20,20,20,28],[[8,[2,2]]]],[[67,20,28],[[8,[28,2]]]],[[67,28,20,28],[[8,[28,2]]]],[28,67],[[67,28],2],[[67,28,20],2],[[67,20],[[8,[2,2]]]],[[67,20,28],2],[-1,-2,[],[]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,2],[70,70],[[-1,-2],2,[],[]],[69,2],0,[[69,28],[[8,[44,2]]]],[[70,3],4],[-1,-1,[]],[-1,-1,[]],[28,70],[70,14],[70,14],[70,14],[70,14],[70,28],[70,14],[70,14],[70,14],[70,14],[70,14],[69,28],[70,28],[70,14],[69,2],[-1,-2,[],[]],[-1,-2,[],[]],[[],69],[[69,28,28],[[8,[44,2]]]],[[69,28,28,28],[[8,[44,2]]]],[[69,20,28,28],2],[[69,20,28],2],[-1,-2,[],[]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-1,[]],[-1,-1,[]],[[71,14],[[21,[29]]]],[[71,28,28,28,28,28],[[8,[2,14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],71],[[72,28],[[8,[2,14]]]],[[72,14],14],[[72,14,[35,[28]],28],2],[[71,14,14,28,28],[[8,[2,14]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[],2],[[72,14,14],2],[[71,14,14,28,28],[[8,[2,14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,29,28,14,28],[[8,[2,14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,73],[74,74],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,28],[[8,[28,14]]]],[29,[[8,[2,14]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,28,14,28],[[8,[2,14]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[[-1,-2],2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],0,[[74,44,44,44,14],72],[[72,28],[[8,[2,14]]]],[[72,14],14],[[72,14,[35,[28]],28],2],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],[[72,14,14],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[29,29],[[-1,-2],2,[],[]],0,0,[-1,-1,[]],[-1,-2,[],[]],0,[[],29],[[29,14],14],[[29,14,28,28],[[8,[2,14]]]],0,[29,28],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],[[29,14,28,28],[[8,[2,14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,2],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[20,2],[20,2],[[],2],[[14,14],2],0,0,0,[[],2],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[55,20],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[75,2],[75,2],[[14,14,14,44],2],[[],2],[[],2],0,[17,6],[76,2],[[14,28,[18,[20]]],17],0,0,0,[28,2],0,0,0,0,0,0,0,0,0,0,0,[[76,[49,[51]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[76,76],2],[[77,77],32],0,0,[[76,3],4],[[77,3],4],[-1,-1,[]],[-1,-1,[]],[[],20],[76,20],[[],[[49,[76]]]],[[76,78],[[8,[79,31]]]],[[76,17,78],[[8,[79,31]]]],[[17,78],[[8,[79,31]]]],0,[[76,[49,[76]]],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[76,2],0,[[],76],0,0,0,0,0,[[],2],[[],2],[17,2],[17,[[8,[[49,[76]],31]]]],[[76,20,28,32],2],[[76,28],2],[76,67],[[76,20,28,32],2],0,0,0,0,[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[17,17],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,80],[78,78],[79,79],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[78,78],32],[[79,79],32],[[78,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[8,[78,31]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,78,17],79],[[17,17,78,17],[[8,[17,31]]]],[[76,17,78,17],2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[[-1,-2],2,[],[]],[82,2],[[81,81],32],[[],6],[[81,3],4],[-1,-1,[]],[-1,-1,[]],[[],82],0,[[55,80],6],[28,2],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],82],0,0,[17,2],[55,2],[[],6],0,[[],6],[55,6],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[],2],0,0,0,0,0,0,0,0,[[83,75,84,20],2],[[83,75,84,85],83],[[83,[2,[75,75,75]],84],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],83],[[20,86],83],0,0,0,0,[[],83],[22,2],[83,2],0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[75,20],87],[87,2],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],[[88,[-1]]],[89,90]],[[[91,[-1]]],-1,90],[[[91,[-1]]],-1,90],[[[91,[-1]]],2,90],[[[88,[-1]],3],4,90],[[[91,[-1]],3],4,[92,90]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[88,[-1]]],[[91,[-1]]],90],0,0,0,0,[-1,[[88,[-1]]],[]],[[[88,[-1]]],2,90],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[88,[-1]]],[[21,[[91,[-1]]]]],90],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[55,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,6],[[17,17,28,93],17],[[17,17,28],17],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,[-1,9,[]],[-1,9,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[94,3],4],[-1,-1,[]],[-1,-2,[],[]],0,[94,14],0,0,0,[[28,20,28,28,17,20],[[8,[[49,[51]],2]]]],[[20,20],17],[28,28],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[],17],[[17,17],17],[17],[[],17],[[],17],[[],17],0,0,0,0,0,0,[95,96],[-1,-2,[],[]],[-1,-2,[],[]],[28,7],[-1,-1,[]],[[],95],[-1,-2,[],[]],0,[[],20],[[],2],[[],2],0,[20,2],0,[20,2],[20,2],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,[[7,28,20],17],[[28,28,28],6],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[49,[-1]]],[[49,[-1]]],[]],[[-1,-2],2,[],[]],[[],[[49,[-1]]],[89,90]],[[[49,[-1]]],-2,90,[]],[[[49,[-1]]],[[97,[[88,[-1]]]]],90],[[[49,[-1]],-3],-2,[],[],[[99,[[97,[[88,[-1]]]]],[[98,[-2]]]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[49,[-1]]],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[100,[-1]]],89],[[101,14],2],[[[100,[102]],14],2],[[101,14],2],[[[100,[102]],14],2],[[[100,[102]],3],4],[-1,-1,[]],[-1,-2,[],[]],[[101,14],32],[[[100,[102]],14],32],[[101,14],32],[[[100,[102]],14],32],[14,[[100,[102]]]],[-1,7,[]],[[101,14],2],[[[100,[102]],14],2],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[-1,-1],-1,[]],0,[103,[[35,[14]]]],[103,22],[-1,-2,[],[]],[-1,-2,[],[]],[103,2],[103,103],[[-1,-2],2,[],[]],[103,[[21,[22]]]],[103,[[21,[22]]]],[[103,3],4],[-1,-1,[]],[103,32],0,[-1,-2,[],[]],[103,32],[103,32],[103,32],[103,32],[[103,22],103],[103,20],[22,103],[103,[[21,[103]]]],[-1,-2,[],[]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[[104,[-1]]],[[21,[-1]]],105],[[[104,[-1]]],[[21,[-1]]],105],[[[104,[-1]],20],[[21,[-1]]],105],[[[104,[-1]],20],[[21,[-1]]],105],[-1,-2,[],[]],[[[104,[-1]]],32,105],[[[104,[-1]]],20,105],[[],[[104,[-1]]],105],[[[104,[-1]]],[[21,[-1]]],105],[[[104,[-1]]],-1,105],[[[104,[-1]],-1],2,105],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,[24,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[106,107],2],[106,2],[[106,20],2],[108,108],[109,109],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,0,0,0,[[],108],[[],109],[106,2],[[109,109],32],[[108,3],4],[[109,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[108,19],[106,20],[[14,20],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[106,17],2],[[],108],[110,6],[[106,108],2],[108,2],[[106,108],2],0,0,[106,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[[106,14],2],[[106,22],4],[[106,22],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,111],[107,107],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],107],[[111,111],32],[[107,107],32],[[111,3],4],[[107,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,111],107],[[],107],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[112,112],[[-1,-2],2,[],[]],0,[112,2],[112,2],[[112,3],4],[-1,-1,[]],[112,107],[112,20],[-1,-2,[],[]],[[20,20,107],112],0,[[112,107],2],[[112,20],2],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[112,2],[[],2],[[],2],[[],2],0,0,0,0],"c":[],"p":[[5,"Tracker",0],[1,"tuple"],[5,"Formatter",3166],[8,"Result",3166],[5,"Layout",3167],[1,"never"],[5,"String",3168],[6,"Result",3169],[5,"TypeId",3170],[5,"MultibootHeader",64],[5,"TermEmu",103],[1,"i8"],[6,"Input",198],[1,"u8"],[1,"char"],[6,"Termcaps",198],[1,"i32"],[5,"Vec",3171],[5,"Command",134],[1,"usize"],[6,"Option",3172],[1,"str"],[5,"Time",229],[5,"Arguments",3166],[5,"DWriter",252],[10,"DiskIO",270],[5,"Box",3173],[1,"u32"],[5,"IDEDevice",1846],[5,"IDEDisk",276],[6,"ErrNo",290],[1,"bool"],[5,"FileInfo",743],[10,"FileOperation",743],[1,"slice"],[6,"SocketDomain",773],[6,"SocketType",773],[6,"SocketProtocol",773],[1,"array"],[5,"Ext2",439],[5,"Dentry",624],[5,"GdtEntry",607],[5,"Inode",624],[1,"u16"],[5,"Bitmap",489],[5,"BaseSuperblock",505],[5,"ExtendedSuperblock",505],[1,"u64"],[5,"RawArcm",2927],[5,"RawFileMemory",759],[5,"MemoryZone",1176],[5,"Socket",773],[5,"SegmentDescriptor",841],[5,"Tss",887],[5,"Registers",940],[5,"InterruptDescriptor",940],[6,"TypeZone",1176],[10,"Allocator",1248],[5,"NonNull",3174],[5,"AllocError",1248],[10,"AllocatorInit",1248],[5,"BumpAllocator",1274],[5,"KGlobal",1291],[5,"LinkedListAllocator",1313],[5,"ListNode",1313],[5,"Bitmaps",1365],[5,"PageDirectory",1390],[5,"PageDirectoryEntry",1390],[5,"PageTable",1448],[5,"PageTableEntry",1448],[5,"IDEController",1650],[5,"IDEChannelRegisters",1825],[6,"ATACommand",1687],[6,"ATAChannel",1687],[1,"f32"],[5,"Process",1987],[6,"Status",1987],[6,"SignalType",2051],[5,"Signal",2051],[5,"SignalHandler",2051],[6,"TaskStatus",2129],[5,"Task",2129],[5,"Partition",2175],[6,"NoteTempo",2217],[6,"NoteType",2217],[6,"BeatType",2175],[5,"Note",2217],[5,"RawMutex",2324],[10,"Default",3175],[10,"Sized",3176],[5,"MutexGuard",2324],[10,"Debug",3166],[5,"RUsage",2812],[5,"mmap_arg",2865],[5,"Time",2890],[1,"f64"],[5,"Arc",3177],[17,"Output"],[10,"FnMut",3178],[5,"Flags",2948],[10,"FlagOp",2948],[5,"AtomicU8",3179],[5,"Path",2972],[5,"Queue",3000],[10,"Clone",3180],[5,"Writer",3019],[5,"ColorCode",3092],[5,"Screen",3019],[5,"ScreenChar",3019],[5,"PanicInfo",3181],[6,"Color",3092],[5,"Cursor",3137],[5,"Stack",64],[6,"Dtype",624],[5,"GDTR",841],[5,"IDT",940],[5,"IDTR",940],[6,"SpecialKeyFlag",1100],[5,"SpecialKeys",1100],[5,"Keymap",1100],[5,"Poc",1163],[6,"TagType",1495],[5,"MemMapEntry",1495],[5,"BootDev",1495],[5,"TagHeader",1495],[5,"MemInfo",1495],[5,"MemMap",1495],[5,"FrameBufferInfo",1495],[5,"ElfSymbols",1495],[5,"ApmTable",1495],[5,"LoadBasePhys",1495],[6,"IDEType",1650],[6,"ATAType",1687],[6,"ATADirection",1687],[5,"ATA",1687],[6,"ATAPICommand",1802],[5,"ATAPI",1802],[6,"Pic2",1872],[6,"Pic1",1872],[8,"Mutex",2324],[8,"KMutex",2324],[6,"Syscall",2360],[5,"Timeval",2812],[8,"Arcm",2927],[8,"KArcm",2927]],"b":[[553,"impl-Display-for-BaseSuperblock"],[554,"impl-Debug-for-BaseSuperblock"],[690,"impl-Debug-for-Inode"],[691,"impl-Display-for-Inode"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
