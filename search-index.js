var searchIndex = JSON.parse('{\
"kernel":{"doc":"32bits - i386 Rust Kernel from Scratch ðŸ¦€","t":"HRHRHRRHDMMALLAAAOOFAOMMLAAALAAFAOOAFALAAOOOFOAAAALLLAAAARRRDRDFMLLLLMOMLLHMFFLLMHLHHOOMHLLLLMLLHDRRRLFLLFLLLMFLLFLFFFFLLFFFLLFFFFFLLLLFRRDLLMMLLOFFMLMMMLLLLMMDRRRRRRRRFLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEHLLLLLLLLFLLLLHFFFFAFFFFDILLLLMLMKALLLKNNNNNNDEEELLLLLLLLMLLLLLLFLLMMLLLLLLLLLLLLLLLMLLLMLLMLLLLLLLLLLLLLLLMLRRHDRRGRRRDCRRMMMLLLLLLHLFCLLMMMLLLLFMLLLLALLLHDLLLLMMLMMMMMMMMMMMMMMMLMMFLMMLMMMMMMMMMMMMMMMMLMLLLRRDHDRRDDRLLLLLLLLLLLLMMMMMMMMMMMMMMFLLLLLLLLLLAMMLFAMLLLLHHHLMMMFMLLLLMMLLLLLLLLLLMLLLLMMHFOOFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFHHFOFFFFFFFNNNNHRRDNRRHNNEDMLLLLLLMMMLLLOFLLLFFMOMMMMMLLLLLLLLLOFADLLLFLLFFFLLLNRNNRRRRRRRRRRRDGRNENGRRRRALLLLLLLLLLLMLLLLLLLFFLLMMLMALLMLLLLLLLLLLLMDIICCFFKKLLALLKLLLAKLAAKLLLLDLMLLLLLMMLLLMLLLDFLFLLLLLLFLLLLLFLLLLLDFLFLLLLLLFLLLLLFLLLLLDDLLLLLLLLLLLLLMLLLLLMMLLLLLLLLRRRRFFFAOOFFOOFFFAHAODRRHRRGLLLLLLLLLLLMLFLLLMDDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDDFLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNNDNDNNNNNNNNNNDNNDNDDDDNNNNDENMMLLLLLLLLLLLLLLLLLLLLFMMMMMMMMMMMMMMMMMLLLLLLLLLLMMMMMMMMLLLLLLLLLLMMMMMMMMFMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNNNRRRRRRRRRRNNRRRRRRRRRRRRRRRRRRRRRRRRRNNEENNNNNNNLLLLFLLCALLFFFFACCFLLLLLLFFRRRRRRRRRRHRRRRRRRRRRHFFFFFGFFFAAAFRNHRHGDNENNLLLLLMLLMLLLLLLLLLLMLLLMMLMMMMMLLLLLLLLMMMMMLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGDDELLLLLLLLLLLLLLLLFMLLLLLLMMMLLLLLLLLLLLMNNRHDDENFLLLLLLLLLLFLFLLLLLOFLLLLOLMMLFFMFFHLLLLLLLLLLLFENNDNNNNLLLLLLLMMLLMLLALLAMAALFLMMMLLLLLLMNNNNDEENNNNNLLLLLLMMLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGDDLLLLMMLLLLLLLLLLLMMLLLLLLLLLENNNNNNNNNNNNNLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNNNNNNNNLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNANNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNANNNNNNNNNNNNNNNNLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNDGDRRROROOOOOOOOOLLLLLLLLFMMMMMMMMMMMMMMMMFFFLLLLMMLLFFFFFFFFFHHDLLLLFLFFFMFMFFLLLRRFFFFFAAADMLLLLLLLLLLLLLLLIDLLLKLKLLLLKLKLLLKLLLLDLLLLLLLLLLLLLLLLLMRRGRHDDHHDFMLLLLLLMOLLLLOLLLLAMMAMMLLLLLLLLFLLLLLFLMOLLLLLLLLLLLMLLLNNNEDNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLMLLLLLLLLLLLLLLLMMFFFOHOO","n":["ALLOCATOR","GLOBAL_ALIGN","KALLOCATOR","KSTACK_ADDR","KTRACKER","STACK_ADDR","STACK_SIZE","TRACKER","Tracker","allocated_bytes","allocation","boot","borrow","borrow_mut","cli","cmos","debug","dprint","dprintln","eh_personality","errno","exec_fn","freed","freed_bytes","from","fs","gdt","interrupts","into","io","keyboard","kinit","kmain","kprint","kprintln","memory","memory_state","multiboot","new","pic","proc","reload_cs","reload_gdt","reload_tss","rust_oom","size_of_args","sound","spin","syscalls","time","try_from","try_into","type_id","user","utils","vga_buffer","wrappers","ARCH","KERNEL_BASE","MULTIBOOT_MAGIC","MultibootHeader","STACK_SIZE","Stack","_start","architecture","borrow","borrow","borrow_mut","borrow_mut","checksum","enable_paging","flags","from","from","header","header_length","high_kernel","init_paging","into","into","magic","multiboot_ptr","new","page_directory","page_table","setup_page_directory","setup_page_table","size","stack","try_from","try_from","try_into","try_into","type","type_id","type_id","COMMANDS","Command","KNOWN_CMD","MAX_CMD_LENGTH","NB_CMDS","append","atou","borrow","borrow_mut","clear","clear","clone","clone_into","command","date","fmt","from","halt","handle","help","hexdump_parser","hextou","interrupt","into","is_known","jiffies","keymap","kill","len","new","play","pmap","ps","reboot","shutdown","to_owned","try_from","try_into","type_id","uptime","CMOS_CMD","CMOS_DATA","Time","borrow","borrow_mut","century","day","fmt","from","from_bcd","get_RTC_register","get_time","hours","into","minutes","month","seconds","to_string","try_from","try_into","type_id","weekday","year","DWriter","SERIAL_COM1","SERIAL_COM2","SERIAL_COM3","SERIAL_COM4","SERIAL_COM5","SERIAL_COM6","SERIAL_COM7","SERIAL_COM8","_print","borrow","borrow_mut","from","into","try_from","try_into","type_id","write_str","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERESTARTNOINTR","ERESTARTSYS","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","ErrNo","STRERROR","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","strerror","to_owned","try_from","try_into","type_id","SYSFILES","close","create","create_from_raw","delete","file","open","read","socket_pair","write","FileInfo","FileOperation","borrow","borrow_mut","from","into","name","new","op","read","socket","try_from","try_into","type_id","write","AF_INET","AF_UNIX","DEFAULT","SOCK_DGRAM","SOCK_RAW","SOCK_STREAM","Socket","SocketDomain","SocketProtocol","SocketType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone","clone_into","clone_into","clone_into","create_socket_pair","dgram_read","dgram_write","domain","endpoint","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","protocol","raw_read","raw_write","read","roffset","stream_read","stream_write","stype","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","woffset","write","CODE","DATA","GDT","GDTR","GROWS_DOWN","GROWS_UP","Gdt","NOT_FOR_CPU","PRESENT","READABLE","SegmentDescriptor","Tss","USER","WRITABLE","access","base","base_end","borrow","borrow","borrow_mut","borrow_mut","from","from","gdt_desc","get_base","get_segment","init_tss","into","into","limit","limit_flags","offset","set_access","set_base","set_flag","set_limit","set_segment","size","try_from","try_from","try_into","try_into","tss","type_id","type_id","update","TSS","Tss","borrow","borrow_mut","clone","clone_into","cr3","cs","default","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","es","esi","esp","esp0","esp1","esp2","from","fs","gs","init_tss","into","iopb","ldtr","new","prev","reserved1","reserved10","reserved11","reserved2","reserved3","reserved4","reserved5","reserved6","reserved7","reserved8","reserved9","ss","ss0","ss1","ss2","to_owned","trap","try_from","try_into","type_id","EXCEPTION_SIZE","GDT_OFFSET_KERNEL_CODE","IDT","IDT","IDTR","IDT_MAX_DESCRIPTORS","IDT_SIZE","InterruptDescriptor","Registers","STR_EXCEPTION","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cr3","cs","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","err_code","esi","esp","exception_handler","fmt","from","from","from","from","get_dpl","get_gate_type","get_offset","get_p","get_selector","idt","idt_entries","idtr","init","init_idt","int","int_no","into","into","into","into","irq_stub_0","isr_stub_syscall","isr_stub_table","new","offset","offset_0","offset_1","page_fault_handler","selector","set_dpl","set_gate_type","set_offset","set_p","size","ss","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_attr","type_id","type_id","type_id","type_id","useresp","zero","irq_stub_0","isr_common_stub","isr_err_stub","isr_no_err_stub","isr_stub_0","isr_stub_1","isr_stub_10","isr_stub_11","isr_stub_12","isr_stub_128","isr_stub_13","isr_stub_14","isr_stub_15","isr_stub_16","isr_stub_17","isr_stub_18","isr_stub_19","isr_stub_2","isr_stub_20","isr_stub_21","isr_stub_22","isr_stub_23","isr_stub_24","isr_stub_25","isr_stub_26","isr_stub_27","isr_stub_28","isr_stub_29","isr_stub_3","isr_stub_30","isr_stub_31","isr_stub_32","isr_stub_33","isr_stub_34","isr_stub_35","isr_stub_36","isr_stub_37","isr_stub_38","isr_stub_39","isr_stub_4","isr_stub_40","isr_stub_41","isr_stub_42","isr_stub_43","isr_stub_44","isr_stub_45","isr_stub_46","isr_stub_47","isr_stub_5","isr_stub_6","isr_stub_7","isr_stub_8","isr_stub_9","isr_stub_syscall","isr_stub_table","int","int_no","inb","inl","inw","io_wait","outb","outl","outw","Caps","CmdLeft","CmdRight","Ctrl","KEYMAP","KEYMAP_FR","KEYMAP_US","Keymap","Opt","PRESSED","RELEASED","SPECIAL_KEYS","ShiftLeft","ShiftRight","SpecialKeyFlag","SpecialKeys","alt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","caps","caps_keys","ctrl","from","from","from","getflag","handle_event","into","into","into","keyboard_event","keyboard_to_ascii","keys","setflag","shift_l","shift_r","special_keys","special_l","special_r","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsetflag","kmain","poc","Poc","borrow","borrow_mut","from","insertion_poc","into","poc","proc_macro_poc","sys_mmap","test_macros","try_from","try_into","type_id","Anon","EXECUTABLE","File","Heap","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_FIXED","MAP_GROWSDOWN","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MemoryZone","PhysAddr","READABLE","Stack","TypeZone","Unassigned","VirtAddr","WRITABLE","_MAP_DENYWRITE","_MAP_EXECUTABLE","_MAP_FILE","allocator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref_mut","drop","flags","fmt","fmt","from","from","grow","init","init_addr","init_memory","init_memory_addr","into","into","kphys","name","new","offset","paging","protect","remap","size","to_owned","to_owned","to_slice","to_slice_mut","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_zone","AllocError","Allocator","AllocatorInit","Global","KGlobal","align_down","align_up","allocate","allocate_zeroed","borrow","borrow_mut","bump","clone","clone_into","deallocate","eq","fmt","from","global","init","into","kglobal","linked_list","realloc","to_owned","try_from","try_into","type_id","BumpAllocator","alloc","allocations","borrow","borrow_mut","dealloc","fmt","from","heap_end","heap_start","init","into","new","next","try_from","try_into","type_id","Global","alloc","alloc_impl","alloc_zeroed","allocate","allocate_zeroed","borrow","borrow_mut","clone","clone_into","dealloc","dealloc_impl","deallocate","fmt","from","into","realloc","realloc","to_owned","try_from","try_into","type_id","KGlobal","alloc","alloc_impl","alloc_zeroed","allocate","allocate_zeroed","borrow","borrow_mut","clone","clone_into","dealloc","dealloc_impl","deallocate","fmt","from","into","realloc","realloc","to_owned","try_from","try_into","type_id","LinkedListAllocator","ListNode","add_free_region","alloc","alloc_from_region","borrow","borrow","borrow_mut","borrow_mut","dealloc","end_addr","find_region","fmt","from","from","head","init","into","into","new","new","next","size","size_align","start_addr","try_from","try_from","try_into","try_into","type_id","type_id","PAGE_GLOBAL","PAGE_PRESENT","PAGE_USER","PAGE_WRITABLE","alloc_page","alloc_pages","alloc_pages_at_addr","bitmap","disable_paging","enable_paging","free_page","free_pages","get_paddr","get_vaddr","init_paging","kalloc_pages","kalloc_pages_at_addr","page_directory","page_directory","page_table","refresh_tlb","Bitmaps","MAX_MEM","PAGE_SIZE","PHYSMAP","SECTOR_NUMBER","SECTOR_SIZE","Sector","borrow","borrow_mut","claim","claim_range","fmt","force_claim_range","free_page","from","get_page","get_pages","into","maps","new","physmap_as_mut","try_from","try_into","type_id","used","PageDirectory","PageDirectoryEntry","borrow","borrow","borrow_mut","borrow_mut","claim_index_page_frames","claim_index_page_table","claim_index_page_tables","claim_page_table","claim_page_tables","clear","clone","clone_into","drop","entries","fmt","from","from","from","get_accessed","get_avl","get_dirty","get_entry","get_global","get_paddr","get_page_frame","get_page_frames","get_page_frames_at_addr","get_page_table","get_pat","get_pcd","get_present","get_ps","get_pwt","get_rsvd","get_user_supervisor","get_vaddr","get_vaddr","get_writable","into","into","kclaim_index_page_frames","kget_page_frames","kget_page_frames_at_addr","new","remove_page_frame","remove_page_frames","remove_page_table","set_entry","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value","PageTable","PageTableEntry","_start_rodata","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","drop","entries","fmt","from","from","from","get_accessed","get_avl","get_dirty","get_global","get_paddr","get_pat","get_pcd","get_present","get_pwt","get_user_supervisor","get_vaddr","get_vaddr","get_writable","init","into","into","new","new_frame","new_index_frame","set_entry","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value","AcpiNew","AcpiOld","Apm","ApmTable","BasicMemInfo","BootDev","BootDev","BootLoaderName","CmdLine","Efi32","Efi32Ih","Efi64","Efi64Ih","EfiBs","EfiMmap","ElfSections","ElfSymbols","End","FrameBuffer","FrameBufferInfo","LoadBaseAddr","LoadBasePhys","MemInfo","MemMap","MemMapEntry","Mmap","Module","Network","Smbios","TagHeader","TagType","Vbe","baseaddr","biosdev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim_multiboot","cseg","cseg_16","cseg_16_len","cseg_len","dseg","dseg_len","entries","entry_size","entsize","flags","flags","framebuffer_addr","framebuffer_bpp","framebuffer_height","framebuffer_pitch","framebuffer_type","framebuffer_width","from","from","from","from","from","from","from","from","from","from","htype","htype","htype","htype","htype","htype","htype","htype","into","into","into","into","into","into","into","into","into","into","length","load_base_addr","mem_lower","mem_upper","mtype","num","offset","partition","read_tags","reserved","reserved","reserved","shndx","size","size","size","size","size","size","size","size","sub_partition","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","versions","ACPI","Available0","Available1","CoProcessor","FloppyDisk","ICW1_ICW4","ICW1_INIT","ICW1_INTERVAL4","ICW1_LEVEL","ICW1_SINGLE","ICW4_8086","ICW4_AUTO","ICW4_BUF_MASTER","ICW4_BUF_SLAVE","ICW4_SFNM","Keyboard","Mouse","PIC1","PIC1_CMD","PIC1_DATA","PIC1_IRQ_FLOPPY","PIC1_IRQ_KEYBOARD","PIC1_IRQ_OFFSET","PIC1_IRQ_PARA1","PIC1_IRQ_PARA23","PIC1_IRQ_SERIAL1","PIC1_IRQ_SERIAL2","PIC1_IRQ_SLAVE","PIC1_IRQ_TIMER","PIC2","PIC2_CMD","PIC2_DATA","PIC2_IRQ_ACPI","PIC2_IRQ_AVAILABLE0","PIC2_IRQ_AVAILABLE1","PIC2_IRQ_CLOCK","PIC2_IRQ_COPROC","PIC2_IRQ_MOUSE","PIC2_IRQ_OFFSET","PIC2_IRQ_PRIMATA","PIC2_IRQ_SECATA","PIC_EOI","ParallelPort1","ParallelPort23","Pic1","Pic2","PrimaryATA","RealTimeClock","SecondaryATA","Serial1","Serial2","Slave","Timer","borrow","borrow","borrow_mut","borrow_mut","end_of_interrupts","from","from","handler","handlers","into","into","irq_clear_mask","irq_set_mask","pic_init_masks","pic_remap","pit","set_irq0_in_ms","set_pit","setup_pic8259","try_from","try_from","try_into","try_into","type_id","type_id","handler","irq_0","ACC_HIBONLY","ACC_LATCHCOUNT","ACC_LOBHIB","ACC_LOBONLY","CHAN0_DATA","CHAN1_DATA","CHAN2_DATA","CHANNEL_0","CHANNEL_1","CHANNEL_2","FREQUENCY","MODE_0","MODE_1","MODE_2","MODE_3","MODE_4","MODE_5","MODE_6","MODE_7","MODE_CMD","READBACK","RELOAD_VALUE","play_sound","set_irq0_in_ms","set_pit","speaker_off","speaker_on","Id","_exit","change_kernel_stack","exec_fn","process","signal","task","wrapper_fn","DEFAULT_FILE","Disable","MASTER_PROCESS","MAX_FD","NEXT_PID","Pid","Process","Run","Status","Thread","Zombie","add_memory_zone","borrow","borrow","borrow_mut","borrow_mut","childs","copy_mem","eq","fds","fmt","fmt","from","from","get_nb_process","get_nb_subprocess","get_running_process","get_signal","get_signal_from_pid","get_signal_running_process","heap","init","into","into","kernel_stack","mem_map","new","owner","page_tables","parent","pd","pid","print_all_process","print_tree","remove","search_from_pid","setup_heap","setup_kernel_stack","setup_pagination","setup_stack","signal_handlers","signals","stack","state","test","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zombify","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSYS","SIGTERM","SIGTRAP","SIGTSTOP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SigHandlerFn","Signal","SignalHandler","SignalType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","from","from","from","get_signal_type","handler","into","into","into","new","send_to_pid","send_to_process","sender","signal","sigtype","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wstatus","Interruptible","Running","STACK_SIZE","TASKLIST","Task","TaskStack","TaskStatus","Uninterruptible","_end_handler","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","do_signal","eq","find_task","fmt","from","from","from","get_running_task","get_segments","handle_signal","init_multitasking","into","into","into","load_cr3","new","process","regs","remove_task_from_process","save_task","schedule_task","state","swap_task","switch_task","task_stack","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wrapper_handler","BeatType","EIGTH","HALF","Partition","QUARTER","SIXTEENTH","THIRTY2ND","WHOLE","add_irregular_note","add_note","add_triplet","borrow","borrow","borrow_mut","borrow_mut","bpm","eigth_note_duration","from","from","half_note_duration","into","into","mii","mii","new","note","notes","notes_frequencies","overworld","overworld","play","play","quarter_note_duration","sixteenth_note_duration","thirty2nd_note_duration","try_from","try_from","try_into","try_into","type_id","type_id","whole_note_duration","BASE","DOTTED","EIGTH","HALF","Note","NoteTempo","NoteType","QUARTER","SIXTEENTH","THIRTY2ND","TRIPLET","WHOLE","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","duration","frequency","from","from","from","into","into","into","new","play","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","A2","A3","A4","A5","Ab2","Ab3","Ab4","Ab5","As2","As3","As4","As5","B2","B3","B4","B5","Bb2","Bb3","Bb4","Bb5","C2","C3","C4","C5","C6","Cs2","Cs3","Cs4","Cs5","D2","D3","D4","D5","Db2","Db3","Db4","Db5","Ds2","Ds3","Ds4","Ds5","E2","E3","E4","E5","Eb2","Eb3","Eb4","Eb5","F2","F3","F4","F5","Fs2","Fs3","Fs4","Fs5","G2","G3","G4","G5","Gb2","Gb3","Gb4","Gb5","Gs2","Gs3","Gs4","Gs5","Rest","KMutex","Mutex","MutexGuard","RawMutex","borrow","borrow","borrow_mut","borrow_mut","data","data","default","deref","deref_mut","drop","fmt","fmt","from","from","into","into","lock","lock","lock","new","obtain_lock","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","Syscall","_llseek","_newselect","_sysctl","accept4","access","acct","add_key","adjtimex","afs_syscall","alarm","arch_prctl","bdflush","bind","borrow","borrow_mut","bpf","break","brk","capget","capset","chdir","chmod","chown","chown32","chroot","clock_adjtime","clock_adjtime64","clock_getres","clock_getres_time64","clock_gettime","clock_gettime64","clock_nanosleep","clock_nanosleep_time64","clock_settime","clock_settime64","clone","clone3","close","close_range","connect","copy_file_range","creat","create_module","delete_module","dup","dup2","dup3","epoll_create","epoll_create1","epoll_ctl","epoll_pwait","epoll_pwait2","epoll_wait","eventfd","eventfd2","execve","execveat","exit","exit","exit_group","faccessat","faccessat2","fadvise64","fadvise64_64","fallocate","fanotify_init","fanotify_mark","fchdir","fchmod","fchmodat","fchown","fchown32","fchownat","fcntl","fcntl64","fdatasync","fgetxattr","finit_module","flistxattr","flock","fork","fremovexattr","from","fsconfig","fsetxattr","fsmount","fsopen","fspick","fstat","fstat64","fstatat64","fstatfs","fstatfs64","fsync","ftime","ftruncate","ftruncate64","futex","futex_time64","futimesat","get_kernel_syms","get_mempolicy","get_robust_list","get_thread_area","getcpu","getcwd","getdents","getdents64","getegid","getegid32","geteuid","geteuid32","getgid","getgid32","getgroups","getgroups32","getitimer","getpeername","getpgid","getpgrp","getpid","getpmsg","getppid","getpriority","getrandom","getresgid","getresgid32","getresuid","getresuid32","getrlimit","getrusage","getsid","getsockname","getsockopt","gettid","gettimeofday","getuid","getuid32","getxattr","gtty","idle","init_module","inotify_add_watch","inotify_init","inotify_init1","inotify_rm_watch","into","io_cancel","io_destroy","io_getevents","io_pgetevents","io_pgetevents_time64","io_setup","io_submit","io_uring_enter","io_uring_register","io_uring_setup","ioctl","ioperm","iopl","ioprio_get","ioprio_set","ipc","kcmp","kexec_load","keyctl","kill","landlock_add_rule","landlock_create_ruleset","landlock_restrict_self","lchown","lchown32","lgetxattr","link","linkat","listen","listxattr","llistxattr","lock","lookup_dcookie","lremovexattr","lseek","lsetxattr","lstat","lstat64","madvise","mbind","membarrier","memfd_create","memfd_secret","migrate_pages","mincore","mkdir","mkdirat","mknod","mknodat","mlock","mlock2","mlockall","mmap","mmap","mmap2","modify_ldt","mount","mount_setattr","move_mount","move_pages","mprotect","mpx","mq_getsetattr","mq_notify","mq_open","mq_timedreceive","mq_timedreceive_time64","mq_timedsend","mq_timedsend_time64","mq_unlink","mremap","msgctl","msgget","msgrcv","msgsnd","msync","munlock","munlockall","munmap","name_to_handle_at","nanosleep","nfsservctl","nice","oldfstat","oldlstat","oldolduname","oldstat","olduname","open","open_by_handle_at","open_tree","openat","openat2","pause","perf_event_open","personality","pidfd_getfd","pidfd_open","pidfd_send_signal","pipe","pipe2","pivot_root","pkey_alloc","pkey_free","pkey_mprotect","poll","ppoll","ppoll_time64","prctl","pread64","preadv","preadv2","prlimit64","process","process_madvise","process_mrelease","process_vm_readv","process_vm_writev","prof","profil","pselect6","pselect6_time64","ptrace","putpmsg","pwrite64","pwritev","pwritev2","query_module","quotactl","quotactl_fd","read","readahead","readdir","readlink","readlinkat","readv","reboot","recvfrom","recvmmsg","recvmmsg_time64","recvmsg","remap_file_pages","removexattr","rename","renameat","renameat2","request_key","restart_syscall","rmdir","rseq","rt_sigaction","rt_sigpending","rt_sigprocmask","rt_sigqueueinfo","rt_sigreturn","rt_sigsuspend","rt_sigtimedwait","rt_sigtimedwait_time64","rt_tgsigqueueinfo","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getattr","sched_getparam","sched_getscheduler","sched_rr_get_interval","sched_rr_get_interval_time64","sched_setaffinity","sched_setattr","sched_setparam","sched_setscheduler","sched_yield","seccomp","select","semctl","semget","semtimedop_time64","sendfile","sendfile64","sendmmsg","sendmsg","sendto","set_mempolicy","set_robust_list","set_thread_area","set_tid_address","setdomainname","setfsgid","setfsgid32","setfsuid","setfsuid32","setgid","setgid32","setgroups","setgroups32","sethostname","setitimer","setns","setpgid","setpriority","setregid","setregid32","setresgid","setresgid32","setresuid","setresuid32","setreuid","setreuid32","setrlimit","setsid","setsockopt","settimeofday","setuid","setuid32","setxattr","sgetmask","shmat","shmctl","shmdt","shmget","shutdown","sigaction","sigaltstack","signal","signal","signalfd","signalfd4","sigpending","sigprocmask","sigreturn","sigsuspend","socket","socketcall","socketpair","splice","ssetmask","stat","stat64","statfs","statfs64","statx","stime","stty","swapoff","swapon","symlink","symlinkat","sync","sync_file_range","syncfs","syscall_handler","sysfs","sysinfo","syslog","tee","tgkill","time","timer","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_gettime64","timer_settime","timer_settime64","timerfd_create","timerfd_gettime","timerfd_gettime64","timerfd_settime","timerfd_settime64","times","tkill","truncate","truncate64","try_from","try_into","type_id","ugetrlimit","ulimit","umask","umount","umount2","uname","unlink","unlinkat","unshare","uselib","userfaultfd","ustat","utime","utimensat","utimensat_time64","utimes","vfork","vhangup","vm86","vm86old","vmsplice","vserver","wait4","waitid","waitpid","write","writev","RUsage","Time","Timeval","WNOHANG","WUNTRACED","__WCONTINUED","__WCOREDUMP","__WCOREFLAG","__WEXITSTATUS","__WIFCONTINUED","__WIFEXITED","__WIFSIGNALED","__WIFSTOPPED","__WSTOPSIG","__WTERMSIG","__W_EXITCODE","__W_STOPCODE","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","next_task","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","sys_exit","sys_wait4","sys_waitpid","try_from","try_from","try_into","try_into","tv_sec","tv_usec","type_id","type_id","mmap","sys_mmap","sys_munmap","sys_fork","sys_kill","sys_signal","sys_getpid","sys_getppid","sys_getuid","JIFFIES","SYSTEM_FRACTION","Time","as_f64","borrow","borrow_mut","from","get_timestamp","into","jiffies","jiffies_inc","microsleep","millisecond","raw_delay_ms","second","sleep","sleep_ms","try_from","try_into","type_id","USER_HEAP_ADDR","USER_STACK_ADDR","exec_fn_userspace","jump_usermode","test_user_page","userfunc","userfunc_end","arcm","flags","queue","Arcm","arc","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","execute","from","into","new","to_owned","try_from","try_into","type_id","FlagOp","Flags","borrow","borrow_mut","default","disable","disable","enable","enable","fmt","from","into","is_disable","is_disable","is_enable","is_enable","new","to_string","toggle","toggle","try_from","try_into","type_id","Queue","borrow","borrow_mut","from","front","front_mut","get","get_mut","into","is_empty","len","new","peek","pop","push","try_from","try_into","type_id","vec","BUFFER_HEIGHT","BUFFER_WIDTH","Buffer","NB_SCREEN","SCREENS","Screen","ScreenChar","VGA_BUFFER","WRITER","Writer","_print","ascii_code","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","change_color","change_screen","chcolor","clear","clear_row","clihandle","clone","clone","clone_into","clone_into","color","color_code","command","cursor","cursor","cursor","eq","fmt","fmt","from","from","from","get_command","get_screen","hexdump","into","into","into","new","new_line","panic","reset","screen_index","screenclear","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vga_buffer","write_byte","write_str","write_string","Black","Blue","Brown","Color","ColorCode","Cyan","DarkGray","Green","LightBlue","LightCyan","LightGray","LightGreen","LightRed","Magenta","Pink","Red","White","Yellow","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","into","into","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Cursor","borrow","borrow_mut","clone","clone_into","color_code","disable","enable","fmt","from","get_color_code","get_pos","into","new","set_color_code","set_pos","to_owned","try_from","try_into","type_id","update","x","y","_cli","_rst","_sti","cli","cli_count","hlt","sti"],"q":[[0,"kernel"],[57,"kernel::boot"],[96,"kernel::cli"],[136,"kernel::cmos"],[159,"kernel::debug"],[177,"kernel::errno"],[315,"kernel::fs"],[325,"kernel::fs::file"],[340,"kernel::fs::file::socket"],[410,"kernel::gdt"],[456,"kernel::gdt::tss"],[509,"kernel::interrupts"],[599,"kernel::interrupts::idt"],[654,"kernel::interrupts::int"],[656,"kernel::io"],[663,"kernel::keyboard"],[716,"kernel::kmain"],[718,"kernel::kmain::poc"],[731,"kernel::memory"],[801,"kernel::memory::allocator"],[829,"kernel::memory::allocator::bump"],[846,"kernel::memory::allocator::global"],[868,"kernel::memory::allocator::kglobal"],[890,"kernel::memory::allocator::linked_list"],[921,"kernel::memory::paging"],[942,"kernel::memory::paging::bitmap"],[967,"kernel::memory::paging::page_directory"],[1026,"kernel::memory::paging::page_table"],[1071,"kernel::multiboot"],[1225,"kernel::pic"],[1303,"kernel::pic::handlers"],[1305,"kernel::pic::pit"],[1332,"kernel::proc"],[1340,"kernel::proc::process"],[1403,"kernel::proc::signal"],[1478,"kernel::proc::task"],[1534,"kernel::sound"],[1576,"kernel::sound::note"],[1613,"kernel::sound::notes_frequencies"],[1683,"kernel::spin"],[1715,"kernel::syscalls"],[2167,"kernel::syscalls::exit"],[2220,"kernel::syscalls::mmap"],[2223,"kernel::syscalls::process"],[2224,"kernel::syscalls::signal"],[2226,"kernel::syscalls::timer"],[2229,"kernel::time"],[2249,"kernel::user"],[2256,"kernel::utils"],[2259,"kernel::utils::arcm"],[2276,"kernel::utils::flags"],[2299,"kernel::utils::queue"],[2318,"kernel::vga_buffer"],[2386,"kernel::vga_buffer::color"],[2429,"kernel::vga_buffer::cursor"],[2452,"kernel::wrappers"]],"d":["","","","","","","","","","","","Define boot and kernel entrypoint","","","Command line interface (term)","","","","","","","","","","Returns the argument unchanged.","","GDT and TSS setup/helpers","Setup interrupts and exception handler","Calls <code>U::from(self)</code>.","Wrappers for in and out asm instructions","Keyboard handler and key mapping","","","","","Allocator, Box and Pagination","","This module aim to parse mutliboot specification","","Setup Programmable Interrupt Controller","Processus, Tasks and Signals","","","","","","","","Syscall handler and all implemented syscalls","","","","","Testing user space code","Module containing little utils","Handler for vga buffer","Wrappers for cli, sti and hlt asm instructions","Arch for multiboot: protected mode","Base address for higher half kernel","Multiboot magic number","Multiboot 1.6 Header","Kernel init stack size at boot","","Kernel entrypoint","","","","","","","Enable paging by loading <code>page_directory</code> into <code>cr3</code>","","Returns the argument unchanged.","Returns the argument unchanged.","multiboot header to define entrypoint inside linker script","","Higher half kernel entrypoint","Setup basic pagination &amp; load gdt","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Address to the multiboot structure used by GRUB","","Kernel page directory","Page table containing kernel code","Setup page tables in <code>page_directory</code>","Setup kernel page table","","Kernel stack","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Ask cmos for actual date and time Current implementation â€¦","","Calls <code>U::from(self)</code>.","","","","","","","","","","Dummy structure to impl fmt::write","","","","","","","","","Wrapper function to call from print macros","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Send to SERIAL_COM2 all bytes from s","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Close a file given its file descriptor. This does not â€¦","Take information on a file and add it to SYSFILES if it â€¦","Create a file given its name and a predefined buffer. The â€¦","Delete file from SYSFILE given its name Should be updated â€¦","","Look for a file given its name in SYSFILES and open it. â€¦","This function mimic the linux read syscall. Look for a â€¦","Create and open a pair of socket given itâ€™s domain, type â€¦","This function mimic the linux write syscall. Look for a â€¦","Contains all file information. Current information are â€¦","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Socket structure representation. Socket alone canâ€™t do â€¦","Represent the different domains of a socket. AF_UNIX bind â€¦","Represent the protocol bound to the socket. Generally only â€¦","Represent the type of the socket. SOCK_RAW: Not yet â€¦","","","","","","","","","","","","","","","","Create two sockets that are bound together, and can be â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a socket given itâ€™s domain, type and protocol","","","","Redirect to the read appropriate to the socket type","","","","","","","","","","","","","","","","","","","","","Redirect to the write appropriate to the socket type","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Valid only for 64 bits system","","","","","","","","","","Flags Flags starting with an underscore re ignored by â€¦","","","","","","","","Prots","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Add pages to the memory zone, growing upward for most â€¦","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Change protection of a memory zone","Remap the memory zone in the virtual address space using â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize the paging:","","","","","","","","","","","","","","","","Claim a page at a specific physical address","Claim multiple pages from specific physical address","","Force a claim of multipage pages from specific physical â€¦","Indicates to the bitmaps that a page is not used anymore","Returns the argument unchanged.","Get the next claimable page","Get multiple pages that are physically next to each other","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arcm is needed to protect MemoryZone only if the memory â€¦","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Task stack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","MutexGuard that provide data mutable access","Mutex structure to prevent data races","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lock the mutex if available otherwise wait until a lock is â€¦","","","Create a new mutex with the given data stored inside","Loop until the inner lock as the value false then write â€¦","","","","","Try to lock the mutex. Returning a Guard if successfull","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</codearameters order: ebx, ecx, edx, esi, edi, ebp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hint: Adress at which the kernel will look for free space. â€¦","","Create a new process from the calling process, copy stack, â€¦","Returns 0 on success, otherwise, returns a negative value â€¦","","","","","","","","","","","Returns the argument unchanged.","Construct a Time structure using the JIFFIES and â€¦","Calls <code>U::from(self)</code>.","Return the value stored in the JIFFIES static variable","Increment by one the JIFFIES counter","Unaccurate sleep for 1 microsecond io_wait should take 1~4 â€¦","","Wait x millisecond looping over io_wait This is quite â€¦","","Sleep until x millisecond have passed","","","","","","","","","","","","","","","Wrap the given type into an Arc and a Mutex. Arc allow â€¦","","","","","","","","","Clone the current Arc and send it to the function pass in â€¦","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new Arcm by copying the data","","","","","To use this trait the type T has to allow interior â€¦","","","","","","disable x bit.","","enable x bit.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","check if the x bit is unset. safety: no check performed, â€¦","","check if the x bit is set. safety: no check performed, â€¦","","","","Toggle bit.","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,[[]],0,0,0,0,[[]],0,0,0,[[]],0,0,[[]],0,0,0,0,[[]],0,[[],1],0,0,0,0,0,[2,3],0,0,0,0,0,[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,[[]],0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[[],6],0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],0,[[],5],[[],5],0,0,0,0,0,[[7,8],4],[9,[[11,[10]]]],[[]],[[]],[[[13,[12]]]],[7],[7,7],[[]],0,[[[13,[12]]]],[[7,14],15],[[]],[[[13,[12]]]],[[7,8]],[[[13,[12]]]],[[[13,[12]]]],[9,[[11,[10]]]],[[[13,[12]]]],[[]],[7,[[11,[10]]]],[[[13,[12]]]],[[[13,[12]]]],[[[13,[12]]]],[7,10],[[],7],[[[13,[12]]]],[[[13,[12]]]],[[[13,[12]]]],[[[13,[12]]]],[[[13,[12]]]],[[]],[[],4],[[],4],[[],5],[[[13,[12]]]],0,0,0,[[]],[[]],0,0,[[16,14],15],[[]],0,[17,17],[[],16],0,[[]],0,0,0,[[],12],[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,0,[18],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],5],[[19,9],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[20,20],[[]],[[20,20],21],[[20,14],15],[[]],[[]],[20,9],[[]],[[],4],[[],4],[[],5],0,[10],[22,[[4,[20]]]],[[9,23],[[4,[20]]]],[9],0,[9,[[4,[10,20]]]],[[10,[24,[17]],10],[[4,[10,20]]]],[[25,26,27,[28,[10]]],[[4,[10,20]]]],[[10,[24,[17]],10],[[4,[10,20]]]],0,0,[[]],[[]],[[]],[[]],0,[[12,[29,[23]]],22],0,[[[24,[17]],10],[[4,[10,20]]]],0,[[],4],[[],4],[[],5],[[[24,[17]],10],[[4,[10,20]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[25,25],[26,26],[27,27],[[]],[[]],[[]],[[25,26,27],[[4,[20]]]],[[30,[24,[17]],10],[[4,[10,20]]]],[[30,[24,[17]],10],[[4,[10,20]]]],0,0,[[25,25],21],[[26,26],21],[[27,27],21],[[25,14],15],[[26,14],15],[[27,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,26,27],30],0,[[30,[24,[17]],10],[[4,[10,20]]]],[[30,[24,[17]],10],[[4,[10,20]]]],[[30,[24,[17]],10],[[4,[10,20]]]],0,[[30,[24,[17]],10],[[4,[10,20]]]],[[30,[24,[17]],10],[[4,[10,20]]]],0,[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],0,[[30,[24,[17]],10],[[4,[10,20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[31,32],[10,31],0,[[]],[[]],0,0,0,[[31,17]],[[31,32]],[[31,17]],[[31,32]],[[10,32,32,17,17]],0,[[],4],[[],4],[[],4],[[],4],0,[[],5],[[],5],[[]],0,0,[[]],[[]],[33,33],[[]],0,0,[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,[32],[[]],0,0,[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[35,35],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[34],[[34,14],15],[[]],[[]],[[]],[[]],[35,17],[35,17],[35,32],[35,17],[35,36],0,0,0,[[35,32,36,17]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,0,[[],34],0,0,0,[34],0,[[35,17]],[[35,17]],[[35,32]],[[35,17]],0,0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[],5],[[],5],[[],5],[[],5],0,0,0,[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[17],0,[36,17],[36,32],[36,36],[[]],[[36,17]],[[36,32]],[[36,36]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],0,[[],8],[[]],[[]],[[]],[[],21],[17,8],0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],0,[[],3],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[37,37],[38,38],[[]],[[]],[38],[38,[[24,[17]]]],[38],0,[[37,14],15],[[38,14],15],[[]],[[]],[38,4],[[37,10,32,21],38],[[32,37,10,32,21],38],[[10,32,21],[[4,[32]]]],[[32,10,32,21],[[4,[32]]]],[[]],[[]],0,0,[[],38],0,0,[[38,32]],[[38,32,10,32],[[4,[32]]]],0,[[]],[[]],[38,[[24,[17]]]],[38,[[24,[17]]]],[[],12],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,0,0,[[32,10],32],[[32,10],32],[2,[[4,[[39,[17]],40]]]],[2,[[4,[[39,[17]],40]]]],[[]],[[]],0,[40,40],[[]],[[[39,[17]],2]],[[40,40],21],[[40,14],15],[[]],0,[[32,10]],[[]],0,0,[[[39,[17]],2,10],[[4,[[39,[17]],40]]]],[[]],[[],4],[[],4],[[],5],0,[[41,2],17],0,[[]],[[]],[[41,17,2]],[[41,14],15],[[]],0,0,[[41,32,10]],[[]],[[],41],0,[[],4],[[],4],[[],5],0,[2,17],[[42,2,21],[[4,[[39,[17]],40]]]],[2,17],[[42,2],[[4,[[39,[17]],40]]]],[[42,2],[[4,[[39,[17]],40]]]],[[]],[[]],[42,42],[[]],[[17,2]],[[42,17,2]],[[42,[39,[17]],2]],[[42,14],15],[[]],[[]],[[17,2,10],17],[[42,[39,[17]],2,10],[[4,[[39,[17]],40]]]],[[]],[[],4],[[],4],[[],5],0,[2,17],[[43,2,21],[[4,[[39,[17]],40]]]],[2,17],[[43,2],[[4,[[39,[17]],40]]]],[[43,2],[[4,[[39,[17]],40]]]],[[]],[[]],[43,43],[[]],[[17,2]],[[43,17,2]],[[43,[39,[17]],2]],[[43,14],15],[[]],[[]],[[17,2,10],17],[[43,[39,[17]],2,10],[[4,[[39,[17]],40]]]],[[]],[[],4],[[],4],[[],5],0,0,[[44,32,10]],[[44,2],17],[[45,10,10],[[4,[32]]]],[[]],[[]],[[]],[[]],[[44,17,2]],[45,32],[[44,10,10],11],[[45,14],15],[[]],[[]],0,[[44,32,10]],[[]],[[]],[[],44],[10,45],0,0,[2],[45,32],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,[32,[[4,[32]]]],[[10,32],[[4,[32]]]],[[32,10,32],[[4,[32]]]],0,0,0,[32],[[32,10]],0,0,[[]],[[10,32],[[4,[32]]]],[[32,10,32],[[4,[32]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[46,32],[[4,[32,10]]]],[[46,32,10],[[4,[32,10]]]],[[46,14],15],[[46,32,10]],[[46,32]],[[]],[46,[[4,[32]]]],[[46,10],[[4,[32]]]],[[]],0,[[],46],[[],46],[[],4],[[],4],[[],5],0,0,0,[[]],[[]],[[]],[[]],[[47,10,10,10,32],4],[[47,10,32],[[4,[10]]]],[[47,10,10,32],[[4,[10]]]],[[47,32],[[4,[10]]]],[[47,10,32],[[4,[10]]]],[47],[48,48],[[]],[47],0,[[48,14],15],[[]],[[]],[32,48],[48,17],[48,17],[48,17],[[47,10],48],[48,17],[48,32],[[47,32],[[4,[32]]]],[[47,10,32],[[4,[32]]]],[[47,32,10,32],[[4,[32]]]],[[47,10],49],[48,17],[48,17],[48,17],[48,17],[48,17],[48,17],[48,17],[47,32],[48,32],[48,17],[[]],[[]],[[47,10,10,10,32],4],[[47,10,32],[[4,[32]]]],[[47,32,10,32],[[4,[32]]]],[32,47],[[47,32]],[[47,32,10]],[[47,10],4],[[47,10,32]],[[]],[[],12],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,[[]],[[]],[[]],[[]],[49],[50,50],[[]],[49],0,[[50,14],15],[[]],[[]],[32,50],[50,17],[50,17],[50,17],[50,17],[50,32],[50,17],[50,17],[50,17],[50,17],[50,17],[49,32],[50,32],[50,17],[49],[[]],[[]],[[],49],[[49,32,32],[[4,[36]]]],[[49,10,32,32]],[[49,10,32]],[[]],[[],12],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[10],[[]],[[]],0,0,[[]],[[]],[10],[10],[[]],[[17,17]],0,0,0,[[]],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[34,10]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51],[51],[[17,17,17,36]],[[]],[[]],0,[52,3],[53],[[32,[13,[10]]],52],0,0,0,[32],0,0,0,0,0,0,0,0,0,0,0,[[53,[29,[38]]]],[[]],[[]],[[]],[[]],0,[[53,53]],[[54,54],21],0,[[53,14],15],[[54,14],15],[[]],[[]],[[],10],[53,10],[[],53],[[53,55],[[4,[56,20]]]],[[53,52,55],[[4,[56,20]]]],[[52,55],[[4,[56,20]]]],0,[[53,53]],[[]],[[]],0,0,[[],53],0,0,0,0,0,[[]],[53],[53],[[53,52],[[4,[53,20]]]],[[53,10,32,21]],[[53,32]],[53,47],[[53,10,32,21]],0,0,0,0,0,[[],12],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[53,52]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[55,55],[56,56],[[]],[[]],[[55,55],21],[[56,56],21],[[55,14],15],[[]],[[]],[[]],[52,[[4,[55,20]]]],0,[[]],[[]],[[]],[[52,55,52],56],[[52,52,55,52],[[4,[52,20]]]],[[53,52,55,52]],0,0,0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,57],[58,58],[[]],[[]],[58],[[57,57],21],[[],3],[[57,14],15],[[]],[[]],[[]],[[],58],0,[[58,59]],[32],[[]],[[]],[[]],0,[[],58],0,0,[53],[34],[[],3],0,[[],3],[34,3],0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[]],0,0,0,0,0,0,0,0,[[60,51,61,10]],[[60,51,61,62],60],[[60,61]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],0,[[]],[[]],0,[[],60],[[10,63],60],0,0,0,0,[[],60],[9],[60],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[51,10],64],[64],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],[[67,[[0,[65,66]]]]]],[[[68,[66]]],66],[[[68,[66]]],66],[[[68,[66]]]],[[[67,[66]],14],15],[[[68,[[0,[69,66]]]],14],15],[[]],[[]],[[]],[[]],[[[67,[66]]],[[68,[66]]]],0,0,[[],67],[[[67,[66]]]],[[],4],[[],4],[[],4],[[],4],[[[67,[66]]],[[11,[[68,[66]]]]]],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[52,3],[[52,52,32,70],52],[[52,52,32],52],[[],4],[[],4],[[],4],[[],4],0,0,[[],5],[[],5],[[10,10,52,52,52,10],17],[[32,10,71,32,52,10],[[4,[[29,[38]]]]]],[[10,10],52],[[],52],[[52,52],52],[52],[[],52],[[],52],[[],52],0,0,0,[72,73],[[]],[[]],[[]],[[],72],[[]],[[],10],[[]],[[]],0,[10],0,[10],[10],[[],4],[[],4],[[],5],0,0,[[32,10],52],[32,3],[[]],0,0,0,0,0,0,0,[[]],[[]],[[[29,[[0,[74,66]]]]],[[29,[[0,[74,66]]]]]],[[]],[[],[[29,[[0,[65,66]]]]]],[[[29,[66]]]],[[[29,[66]]],[[75,[[67,[66]]]]]],[[29,76]],[[]],[[]],[[],29],[[]],[[],4],[[],4],[[],5],0,0,[[]],[[]],[[],[[77,[65]]]],[17],[[[77,[78]],17]],[17],[[[77,[78]],17]],[[[77,[78]],14],15],[[]],[[]],[17,21],[[[77,[78]],17],21],[17,21],[[[77,[78]],17],21],[17,[[77,[78]]]],[[],12],[17],[[[77,[78]],17]],[[],4],[[],4],[[],5],0,[[]],[[]],[[]],[[[79,[74]]],[[11,[74]]]],[[[79,[74]]],[[11,[74]]]],[[[79,[74]],10],[[11,[74]]]],[[[79,[74]],10],[[11,[74]]]],[[]],[[[79,[74]]],21],[[[79,[74]]],10],[[],[[79,[74]]]],[[[79,[74]]],[[11,[74]]]],[[[79,[74]]],74],[[[79,[74]],74]],[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,0,[18],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[80,10]],[[80,81]],[80],[[80,10]],0,[82,82],[83,83],[[]],[[]],0,0,0,0,0,0,[[83,83],21],[[82,14],15],[[83,14],15],[[]],[[]],[[]],[82,7],[80,10],[[17,10]],[[]],[[]],[[]],[[],82],[80],[84,3],[82],0,0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],0,[[80,17]],[[80,9],15],[[80,9]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[85,85],[81,81],[[]],[[]],[[85,85],21],[[81,81],21],[[85,14],15],[[81,14],15],[[]],[[]],[[]],[[]],[[85,85],81],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,[[]],[[]],[86,86],[[]],0,[86],[86],[[86,14],15],[[]],[86,81],[86],[[]],[[10,10,81],86],[[86,81]],[[86,10,10]],[[]],[[],4],[[],4],[[],5],[86],0,0,[[]],[[]],[[]],0,0,0,0],"c":[],"p":[[3,"Tracker"],[3,"Layout"],[15,"never"],[4,"Result"],[3,"TypeId"],[3,"MultibootHeader"],[3,"Command"],[15,"char"],[15,"str"],[15,"usize"],[4,"Option"],[3,"String"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[3,"Time"],[15,"u8"],[3,"Arguments"],[3,"DWriter"],[4,"ErrNo"],[15,"bool"],[3,"FileInfo"],[8,"FileOperation"],[15,"slice"],[4,"SocketDomain"],[4,"SocketType"],[4,"SocketProtocol"],[15,"array"],[3,"Arcm"],[3,"Socket"],[3,"SegmentDescriptor"],[15,"u32"],[3,"Tss"],[3,"Registers"],[3,"InterruptDescriptor"],[15,"u16"],[4,"TypeZone"],[3,"MemoryZone"],[3,"NonNull"],[3,"AllocError"],[3,"BumpAllocator"],[3,"Global"],[3,"KGlobal"],[3,"LinkedListAllocator"],[3,"ListNode"],[3,"Bitmaps"],[3,"PageDirectory"],[3,"PageDirectoryEntry"],[3,"PageTable"],[3,"PageTableEntry"],[15,"f32"],[15,"i32"],[3,"Process"],[4,"Status"],[4,"SignalType"],[3,"Signal"],[4,"TaskStatus"],[3,"Task"],[3,"SignalHandler"],[3,"Partition"],[4,"NoteTempo"],[4,"NoteType"],[4,"BeatType"],[3,"Note"],[8,"Default"],[8,"Sized"],[3,"RawMutex"],[3,"MutexGuard"],[8,"Debug"],[3,"RUsage"],[15,"isize"],[3,"Time"],[15,"f64"],[8,"Clone"],[3,"Arc"],[8,"FnMut"],[3,"Flags"],[3,"AtomicU8"],[3,"Queue"],[3,"Writer"],[3,"ColorCode"],[3,"Screen"],[3,"ScreenChar"],[3,"PanicInfo"],[4,"Color"],[3,"Cursor"],[3,"Stack"],[3,"GDTR"],[3,"IDT"],[3,"IDTR"],[4,"SpecialKeyFlag"],[3,"SpecialKeys"],[3,"Keymap"],[3,"Poc"],[8,"Allocator"],[8,"AllocatorInit"],[4,"TagType"],[3,"MemMapEntry"],[3,"BootDev"],[3,"TagHeader"],[3,"MemInfo"],[3,"MemMap"],[3,"FrameBufferInfo"],[3,"ElfSymbols"],[3,"ApmTable"],[3,"LoadBasePhys"],[4,"Pic2"],[4,"Pic1"],[3,"TaskStack"],[4,"Syscall"],[3,"Timeval"],[8,"FlagOp"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
