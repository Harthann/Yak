(function() {var type_impls = {
"kernel":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawMutex%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#31-36\">source</a><a href=\"#impl-RawMutex%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const INT: bool&gt; <a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#33-35\">source</a><h4 class=\"code-header\">pub const fn <a href=\"kernel/spin/struct.RawMutex.html#tymethod.new\" class=\"fn\">new</a>(data: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new mutex with the given data stored inside</p>\n</div></details></div></details>",0,"kernel::spin::Mutex","kernel::spin::KMutex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawMutex%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#40-101\">source</a><a href=\"#impl-RawMutex%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: ?Sized, const INT: bool&gt; <a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.obtain_lock\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#44-64\">source</a><h4 class=\"code-header\">fn <a href=\"kernel/spin/struct.RawMutex.html#tymethod.obtain_lock\" class=\"fn\">obtain_lock</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Loop until the inner lock as the value false then write true on it.\nOnce the value as been written the mutex is successfully locked.\nIf <code>const INT</code> as been set to <code>true</code>, interrupt flag is clear</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#71-76\">source</a><h4 class=\"code-header\">pub fn <a href=\"kernel/spin/struct.RawMutex.html#tymethod.lock\" class=\"fn\">lock</a>(&amp;self) -&gt; <a class=\"struct\" href=\"kernel/spin/struct.MutexGuard.html\" title=\"struct kernel::spin::MutexGuard\">MutexGuard</a>&lt;'_, T, INT&gt;</h4></section></summary><div class=\"docblock\"><p>Lock the mutex if available otherwise wait until a lock is successfull\nIf feature <code>mutex_debug</code> is enable, self if written to the debug output</p>\n<p>The returned value can be dereference to access the data, once the guard falls\nout of scope, mutex will be unlocked</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_lock\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#79-100\">source</a><h4 class=\"code-header\">pub fn <a href=\"kernel/spin/struct.RawMutex.html#tymethod.try_lock\" class=\"fn\">try_lock</a>(&amp;self) -&gt; Option&lt;<a class=\"struct\" href=\"kernel/spin/struct.MutexGuard.html\" title=\"struct kernel::spin::MutexGuard\">MutexGuard</a>&lt;'_, T, INT&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Try to lock the mutex. Returning a Guard if successfull</p>\n</div></details></div></details>",0,"kernel::spin::Mutex","kernel::spin::KMutex"],["<section id=\"impl-Send-for-RawMutex%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#38\">source</a><a href=\"#impl-Send-for-RawMutex%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: ?Sized + Send, const INT: bool&gt; Send for <a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;</h3></section>","Send","kernel::spin::Mutex","kernel::spin::KMutex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-RawMutex%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#16\">source</a><a href=\"#impl-Default-for-RawMutex%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Default + ?Sized, const INT: bool&gt; Default for <a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#16\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a>Read more</a></div></details></div></details>","Default","kernel::spin::Mutex","kernel::spin::KMutex"],["<section id=\"impl-Sync-for-RawMutex%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#37\">source</a><a href=\"#impl-Sync-for-RawMutex%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: ?Sized + Send, const INT: bool&gt; Sync for <a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;</h3></section>","Sync","kernel::spin::Mutex","kernel::spin::KMutex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RawMutex%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#104-111\">source</a><a href=\"#impl-Debug-for-RawMutex%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: ?Sized, const INT: bool&gt; Debug for <a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel/spin/mod.rs.html#105-110\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","kernel::spin::Mutex","kernel::spin::KMutex"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()