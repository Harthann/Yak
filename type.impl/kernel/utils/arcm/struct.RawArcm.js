(function() {var type_impls = {
"kernel":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawArcm%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#21-48\">source</a><a href=\"#impl-RawArcm%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const INT: bool&gt; <a class=\"struct\" href=\"kernel/utils/arcm/struct.RawArcm.html\" title=\"struct kernel::utils::arcm::RawArcm\">RawArcm</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#28-30\">source</a><h4 class=\"code-header\">pub fn <a href=\"kernel/utils/arcm/struct.RawArcm.html#tymethod.new\" class=\"fn\">new</a>(data: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new RawArcm by copying the data</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>arcm: RawArcm&lt;u32, <span class=\"bool-val\">false</span>&gt; = RawArcm::new(<span class=\"number\">5</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#42-47\">source</a><h4 class=\"code-header\">pub fn <a href=\"kernel/utils/arcm/struct.RawArcm.html#tymethod.execute\" class=\"fn\">execute</a>&lt;R&gt;(&amp;self, callback: impl FnMut(Arc&lt;<a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;&gt;) -&gt; R) -&gt; R</h4></section></summary><div class=\"docblock\"><p>Clone the current Arc and send it to the function pass in paramters</p>\n<h5 id=\"examples-1\"><a href=\"#examples-1\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>arcm: RawArcm&lt;u32, <span class=\"bool-val\">false</span>&gt; = RawArcm::new(<span class=\"number\">5</span>);\narcm.execute(|cloned| {\n    <span class=\"kw-2\">*</span>cloned.lock() = <span class=\"number\">10</span>;\n});\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>arcm, <span class=\"number\">10</span>);</code></pre></div>\n</div></details></div></details>",0,"kernel::utils::arcm::Arcm","kernel::utils::arcm::KArcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-RawArcm%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#11\">source</a><a href=\"#impl-Default-for-RawArcm%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Default + ?Sized, const INT: bool&gt; Default for <a class=\"struct\" href=\"kernel/utils/arcm/struct.RawArcm.html\" title=\"struct kernel::utils::arcm::RawArcm\">RawArcm</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#11\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"kernel/utils/arcm/struct.RawArcm.html\" title=\"struct kernel::utils::arcm::RawArcm\">RawArcm</a>&lt;T, INT&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a>Read more</a></div></details></div></details>","Default","kernel::utils::arcm::Arcm","kernel::utils::arcm::KArcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RawArcm%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#16-20\">source</a><a href=\"#impl-Clone-for-RawArcm%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const INT: bool&gt; Clone for <a class=\"struct\" href=\"kernel/utils/arcm/struct.RawArcm.html\" title=\"struct kernel::utils::arcm::RawArcm\">RawArcm</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#17-19\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a>Read more</a></div></details></div></details>","Clone","kernel::utils::arcm::Arcm","kernel::utils::arcm::KArcm"],["<section id=\"impl-CoerceUnsized%3CRawArcm%3CU,+INT%3E%3E-for-RawArcm%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#81-87\">source</a><a href=\"#impl-CoerceUnsized%3CRawArcm%3CU,+INT%3E%3E-for-RawArcm%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const INT: bool&gt; CoerceUnsized&lt;<a class=\"struct\" href=\"kernel/utils/arcm/struct.RawArcm.html\" title=\"struct kernel::utils::arcm::RawArcm\">RawArcm</a>&lt;U, INT&gt;&gt; for <a class=\"struct\" href=\"kernel/utils/arcm/struct.RawArcm.html\" title=\"struct kernel::utils::arcm::RawArcm\">RawArcm</a>&lt;T, INT&gt;<span class=\"where fmt-newline\">where\n    T: Unsize&lt;U&gt; + ?Sized,\n    U: ?Sized,</span></h3></section><div class=\"docblock\"><p>Allow type coercion from RawArcm&lt;T&gt; to RawArcm&lt;U&gt; where U is Unsized and coercion exist from T to U\nThis is used to store <code>dyn Trait</code> from a struct that implement the trait for example</p>\n<h4 id=\"examples\"><a href=\"#examples\">Examples</a></h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">trait </span>Foo {\n    <span class=\"kw\">fn </span>bar(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; u32;\n}\n<span class=\"kw\">struct </span>Foobar {}\n<span class=\"kw\">impl </span>Foo <span class=\"kw\">for </span>Foobar {\n    <span class=\"kw\">fn </span>bar(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; u32 { <span class=\"number\">42 </span>}\n}\n<span class=\"kw\">fn </span>exmaple() {\n    <span class=\"kw\">let </span>foo: Foobar = Foobar{};\n    <span class=\"kw\">let </span>arcm: RawArcm&lt;<span class=\"kw\">dyn </span>Foo, <span class=\"bool-val\">false</span>&gt; = RawArcm::new(foo);\n    <span class=\"macro\">assert_eq!</span>(arcm.lock().bar(), <span class=\"number\">42</span>);\n}</code></pre></div>\n</div>","CoerceUnsized<RawArcm<U, INT>>","kernel::utils::arcm::Arcm","kernel::utils::arcm::KArcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-RawArcm%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#57-61\">source</a><a href=\"#impl-DerefMut-for-RawArcm%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: ?Sized, const INT: bool&gt; DerefMut for <a class=\"struct\" href=\"kernel/utils/arcm/struct.RawArcm.html\" title=\"struct kernel::utils::arcm::RawArcm\">RawArcm</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#58-60\">source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut Arc&lt;<a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;&gt;</h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","kernel::utils::arcm::Arcm","kernel::utils::arcm::KArcm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-RawArcm%3CT,+INT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#50-55\">source</a><a href=\"#impl-Deref-for-RawArcm%3CT,+INT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: ?Sized, const INT: bool&gt; Deref for <a class=\"struct\" href=\"kernel/utils/arcm/struct.RawArcm.html\" title=\"struct kernel::utils::arcm::RawArcm\">RawArcm</a>&lt;T, INT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Target</a> = Arc&lt;<a class=\"struct\" href=\"kernel/spin/struct.RawMutex.html\" title=\"struct kernel::spin::RawMutex\">RawMutex</a>&lt;T, INT&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kernel/utils/arcm.rs.html#52-54\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::Target</h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","kernel::utils::arcm::Arcm","kernel::utils::arcm::KArcm"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()