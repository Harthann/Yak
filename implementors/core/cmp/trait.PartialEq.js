(function() {var implementors = {};
implementors["kernel"] = [{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"kernel/memory/allocator/struct.AllocError.html\" title=\"struct kernel::memory::allocator::AllocError\">AllocError</a>&gt; for <a class=\"struct\" href=\"kernel/memory/allocator/struct.AllocError.html\" title=\"struct kernel::memory::allocator::AllocError\">AllocError</a>","synthetic":false,"types":["kernel::memory::allocator::AllocError"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"kernel/proc/process/enum.Status.html\" title=\"enum kernel::proc::process::Status\">Status</a>&gt; for <a class=\"enum\" href=\"kernel/proc/process/enum.Status.html\" title=\"enum kernel::proc::process::Status\">Status</a>","synthetic":false,"types":["kernel::proc::process::Status"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"kernel/proc/signal/enum.SignalType.html\" title=\"enum kernel::proc::signal::SignalType\">SignalType</a>&gt; for <a class=\"enum\" href=\"kernel/proc/signal/enum.SignalType.html\" title=\"enum kernel::proc::signal::SignalType\">SignalType</a>","synthetic":false,"types":["kernel::proc::signal::SignalType"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"kernel/proc/signal/struct.Signal.html\" title=\"struct kernel::proc::signal::Signal\">Signal</a>&gt; for <a class=\"struct\" href=\"kernel/proc/signal/struct.Signal.html\" title=\"struct kernel::proc::signal::Signal\">Signal</a>","synthetic":false,"types":["kernel::proc::signal::Signal"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"kernel/proc/task/enum.TaskStatus.html\" title=\"enum kernel::proc::task::TaskStatus\">TaskStatus</a>&gt; for <a class=\"enum\" href=\"kernel/proc/task/enum.TaskStatus.html\" title=\"enum kernel::proc::task::TaskStatus\">TaskStatus</a>","synthetic":false,"types":["kernel::proc::task::TaskStatus"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"kernel/vga_buffer/color/enum.Color.html\" title=\"enum kernel::vga_buffer::color::Color\">Color</a>&gt; for <a class=\"enum\" href=\"kernel/vga_buffer/color/enum.Color.html\" title=\"enum kernel::vga_buffer::color::Color\">Color</a>","synthetic":false,"types":["kernel::vga_buffer::color::Color"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"kernel/vga_buffer/color/struct.ColorCode.html\" title=\"struct kernel::vga_buffer::color::ColorCode\">ColorCode</a>&gt; for <a class=\"struct\" href=\"kernel/vga_buffer/color/struct.ColorCode.html\" title=\"struct kernel::vga_buffer::color::ColorCode\">ColorCode</a>","synthetic":false,"types":["kernel::vga_buffer::color::ColorCode"]},{"text":"impl PartialEq&lt;<a class=\"struct\" href=\"kernel/vga_buffer/struct.ScreenChar.html\" title=\"struct kernel::vga_buffer::ScreenChar\">ScreenChar</a>&gt; for <a class=\"struct\" href=\"kernel/vga_buffer/struct.ScreenChar.html\" title=\"struct kernel::vga_buffer::ScreenChar\">ScreenChar</a>","synthetic":false,"types":["kernel::vga_buffer::ScreenChar"]},{"text":"impl PartialEq&lt;<a class=\"enum\" href=\"kernel/errno/enum.ErrNo.html\" title=\"enum kernel::errno::ErrNo\">ErrNo</a>&gt; for <a class=\"enum\" href=\"kernel/errno/enum.ErrNo.html\" title=\"enum kernel::errno::ErrNo\">ErrNo</a>","synthetic":false,"types":["kernel::errno::ErrNo"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()